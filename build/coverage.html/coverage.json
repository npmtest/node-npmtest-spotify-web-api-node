{"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_spotify_web_api_node */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/lib.npmtest_spotify_web_api_node.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/lib.npmtest_spotify_web_api_node.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":65}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":71}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_spotify_web_api_node */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_spotify_web_api_node = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_spotify_web_api_node = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":64}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":78},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-spotify-web-api-node && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_spotify_web_api_node */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_spotify_web_api_node","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_spotify_web_api_node.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_spotify_web_api_node.rollup.js'] =","            local.assetsDict['/assets.npmtest_spotify_web_api_node.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_spotify_web_api_node.__dirname + '/lib.npmtest_spotify_web_api_node.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/server.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/server.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}}},"branchMap":{},"code":["var SpotifyWebApi = require('./spotify-web-api');","var ServerMethods = require('./server-methods');","SpotifyWebApi._addMethods(ServerMethods);","module.exports = SpotifyWebApi;",""],"l":{"1":1,"2":1,"3":1,"4":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/spotify-web-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/spotify-web-api.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":1,"550":1,"551":3,"552":3,"553":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[3,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1},"fnMap":{"1":{"name":"SpotifyWebApi","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":22},"end":{"line":12,"column":49}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":50}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":45}}},"5":{"name":"(anonymous_5)","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":52}}},"6":{"name":"(anonymous_6)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":46}}},"7":{"name":"(anonymous_7)","line":46,"loc":{"start":{"line":46,"column":19},"end":{"line":46,"column":50}}},"8":{"name":"(anonymous_8)","line":54,"loc":{"start":{"line":54,"column":18},"end":{"line":54,"column":40}}},"9":{"name":"(anonymous_9)","line":62,"loc":{"start":{"line":62,"column":18},"end":{"line":62,"column":29}}},"10":{"name":"(anonymous_10)","line":66,"loc":{"start":{"line":66,"column":20},"end":{"line":66,"column":31}}},"11":{"name":"(anonymous_11)","line":70,"loc":{"start":{"line":70,"column":15},"end":{"line":70,"column":34}}},"12":{"name":"(anonymous_12)","line":74,"loc":{"start":{"line":74,"column":19},"end":{"line":74,"column":42}}},"13":{"name":"(anonymous_13)","line":78,"loc":{"start":{"line":78,"column":18},"end":{"line":78,"column":40}}},"14":{"name":"(anonymous_14)","line":82,"loc":{"start":{"line":82,"column":19},"end":{"line":82,"column":42}}},"15":{"name":"(anonymous_15)","line":86,"loc":{"start":{"line":86,"column":18},"end":{"line":86,"column":40}}},"16":{"name":"(anonymous_16)","line":90,"loc":{"start":{"line":90,"column":18},"end":{"line":90,"column":29}}},"17":{"name":"(anonymous_17)","line":94,"loc":{"start":{"line":94,"column":15},"end":{"line":94,"column":26}}},"18":{"name":"(anonymous_18)","line":98,"loc":{"start":{"line":98,"column":19},"end":{"line":98,"column":30}}},"19":{"name":"(anonymous_19)","line":102,"loc":{"start":{"line":102,"column":18},"end":{"line":102,"column":29}}},"20":{"name":"(anonymous_20)","line":106,"loc":{"start":{"line":106,"column":19},"end":{"line":106,"column":30}}},"21":{"name":"(anonymous_21)","line":110,"loc":{"start":{"line":110,"column":17},"end":{"line":110,"column":28}}},"22":{"name":"(anonymous_22)","line":114,"loc":{"start":{"line":114,"column":21},"end":{"line":114,"column":32}}},"23":{"name":"(anonymous_23)","line":118,"loc":{"start":{"line":118,"column":20},"end":{"line":118,"column":31}}},"24":{"name":"(anonymous_24)","line":122,"loc":{"start":{"line":122,"column":21},"end":{"line":122,"column":32}}},"25":{"name":"(anonymous_25)","line":126,"loc":{"start":{"line":126,"column":20},"end":{"line":126,"column":31}}},"26":{"name":"(anonymous_26)","line":130,"loc":{"start":{"line":130,"column":18},"end":{"line":130,"column":49}}},"27":{"name":"(anonymous_27)","line":135,"loc":{"start":{"line":135,"column":18},"end":{"line":135,"column":42}}},"28":{"name":"(anonymous_28)","line":143,"loc":{"start":{"line":143,"column":20},"end":{"line":143,"column":44}}},"29":{"name":"(anonymous_29)","line":160,"loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":49}}},"30":{"name":"(anonymous_30)","line":171,"loc":{"start":{"line":171,"column":35},"end":{"line":171,"column":49}}},"31":{"name":"(anonymous_31)","line":186,"loc":{"start":{"line":186,"column":19},"end":{"line":186,"column":34}}},"32":{"name":"(anonymous_32)","line":188,"loc":{"start":{"line":188,"column":9},"end":{"line":188,"column":23}}},"33":{"name":"(anonymous_33)","line":205,"loc":{"start":{"line":205,"column":13},"end":{"line":205,"column":51}}},"34":{"name":"(anonymous_34)","line":216,"loc":{"start":{"line":216,"column":35},"end":{"line":216,"column":49}}},"35":{"name":"(anonymous_35)","line":234,"loc":{"start":{"line":234,"column":19},"end":{"line":234,"column":34}}},"36":{"name":"(anonymous_36)","line":236,"loc":{"start":{"line":236,"column":9},"end":{"line":236,"column":23}}},"37":{"name":"(anonymous_37)","line":253,"loc":{"start":{"line":253,"column":12},"end":{"line":253,"column":49}}},"38":{"name":"(anonymous_38)","line":264,"loc":{"start":{"line":264,"column":35},"end":{"line":264,"column":49}}},"39":{"name":"(anonymous_39)","line":279,"loc":{"start":{"line":279,"column":19},"end":{"line":279,"column":34}}},"40":{"name":"(anonymous_40)","line":281,"loc":{"start":{"line":281,"column":9},"end":{"line":281,"column":23}}},"41":{"name":"(anonymous_41)","line":298,"loc":{"start":{"line":298,"column":13},"end":{"line":298,"column":51}}},"42":{"name":"(anonymous_42)","line":309,"loc":{"start":{"line":309,"column":35},"end":{"line":309,"column":49}}},"43":{"name":"(anonymous_43)","line":327,"loc":{"start":{"line":327,"column":19},"end":{"line":327,"column":34}}},"44":{"name":"(anonymous_44)","line":329,"loc":{"start":{"line":329,"column":9},"end":{"line":329,"column":23}}},"45":{"name":"(anonymous_45)","line":345,"loc":{"start":{"line":345,"column":13},"end":{"line":345,"column":42}}},"46":{"name":"(anonymous_46)","line":355,"loc":{"start":{"line":355,"column":19},"end":{"line":355,"column":34}}},"47":{"name":"(anonymous_47)","line":357,"loc":{"start":{"line":357,"column":9},"end":{"line":357,"column":23}}},"48":{"name":"(anonymous_48)","line":373,"loc":{"start":{"line":373,"column":14},"end":{"line":373,"column":44}}},"49":{"name":"(anonymous_49)","line":386,"loc":{"start":{"line":386,"column":19},"end":{"line":386,"column":34}}},"50":{"name":"(anonymous_50)","line":388,"loc":{"start":{"line":388,"column":9},"end":{"line":388,"column":23}}},"51":{"name":"(anonymous_51)","line":408,"loc":{"start":{"line":408,"column":10},"end":{"line":408,"column":52}}},"52":{"name":"(anonymous_52)","line":423,"loc":{"start":{"line":423,"column":19},"end":{"line":423,"column":34}}},"53":{"name":"(anonymous_53)","line":425,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":23}}},"54":{"name":"(anonymous_54)","line":443,"loc":{"start":{"line":443,"column":16},"end":{"line":443,"column":51}}},"55":{"name":"(anonymous_55)","line":457,"loc":{"start":{"line":457,"column":17},"end":{"line":457,"column":52}}},"56":{"name":"(anonymous_56)","line":471,"loc":{"start":{"line":471,"column":16},"end":{"line":471,"column":51}}},"57":{"name":"(anonymous_57)","line":485,"loc":{"start":{"line":485,"column":19},"end":{"line":485,"column":54}}},"58":{"name":"(anonymous_58)","line":499,"loc":{"start":{"line":499,"column":19},"end":{"line":499,"column":57}}},"59":{"name":"(anonymous_59)","line":510,"loc":{"start":{"line":510,"column":19},"end":{"line":510,"column":34}}},"60":{"name":"(anonymous_60)","line":512,"loc":{"start":{"line":512,"column":9},"end":{"line":512,"column":23}}},"61":{"name":"(anonymous_61)","line":530,"loc":{"start":{"line":530,"column":18},"end":{"line":530,"column":55}}},"62":{"name":"(anonymous_62)","line":541,"loc":{"start":{"line":541,"column":19},"end":{"line":541,"column":34}}},"63":{"name":"(anonymous_63)","line":543,"loc":{"start":{"line":543,"column":9},"end":{"line":543,"column":23}}},"64":{"name":"(anonymous_64)","line":561,"loc":{"start":{"line":561,"column":22},"end":{"line":561,"column":60}}},"65":{"name":"(anonymous_65)","line":574,"loc":{"start":{"line":574,"column":19},"end":{"line":574,"column":34}}},"66":{"name":"(anonymous_66)","line":576,"loc":{"start":{"line":576,"column":9},"end":{"line":576,"column":23}}},"67":{"name":"(anonymous_67)","line":592,"loc":{"start":{"line":592,"column":27},"end":{"line":592,"column":56}}},"68":{"name":"(anonymous_68)","line":602,"loc":{"start":{"line":602,"column":19},"end":{"line":602,"column":34}}},"69":{"name":"(anonymous_69)","line":604,"loc":{"start":{"line":604,"column":9},"end":{"line":604,"column":23}}},"70":{"name":"(anonymous_70)","line":621,"loc":{"start":{"line":621,"column":11},"end":{"line":621,"column":38}}},"71":{"name":"(anonymous_71)","line":631,"loc":{"start":{"line":631,"column":19},"end":{"line":631,"column":34}}},"72":{"name":"(anonymous_72)","line":633,"loc":{"start":{"line":633,"column":9},"end":{"line":633,"column":23}}},"73":{"name":"(anonymous_73)","line":650,"loc":{"start":{"line":650,"column":9},"end":{"line":650,"column":28}}},"74":{"name":"(anonymous_74)","line":660,"loc":{"start":{"line":660,"column":19},"end":{"line":660,"column":34}}},"75":{"name":"(anonymous_75)","line":662,"loc":{"start":{"line":662,"column":9},"end":{"line":662,"column":23}}},"76":{"name":"(anonymous_76)","line":681,"loc":{"start":{"line":681,"column":20},"end":{"line":681,"column":56}}},"77":{"name":"(anonymous_77)","line":699,"loc":{"start":{"line":699,"column":19},"end":{"line":699,"column":34}}},"78":{"name":"(anonymous_78)","line":701,"loc":{"start":{"line":701,"column":9},"end":{"line":701,"column":23}}},"79":{"name":"(anonymous_79)","line":719,"loc":{"start":{"line":719,"column":15},"end":{"line":719,"column":63}}},"80":{"name":"(anonymous_80)","line":730,"loc":{"start":{"line":730,"column":19},"end":{"line":730,"column":34}}},"81":{"name":"(anonymous_81)","line":732,"loc":{"start":{"line":732,"column":9},"end":{"line":732,"column":23}}},"82":{"name":"(anonymous_82)","line":750,"loc":{"start":{"line":750,"column":21},"end":{"line":750,"column":69}}},"83":{"name":"(anonymous_83)","line":761,"loc":{"start":{"line":761,"column":19},"end":{"line":761,"column":34}}},"84":{"name":"(anonymous_84)","line":763,"loc":{"start":{"line":763,"column":9},"end":{"line":763,"column":23}}},"85":{"name":"(anonymous_85)","line":781,"loc":{"start":{"line":781,"column":18},"end":{"line":781,"column":68}}},"86":{"name":"(anonymous_86)","line":792,"loc":{"start":{"line":792,"column":35},"end":{"line":792,"column":49}}},"87":{"name":"(anonymous_87)","line":808,"loc":{"start":{"line":808,"column":19},"end":{"line":808,"column":34}}},"88":{"name":"(anonymous_88)","line":810,"loc":{"start":{"line":810,"column":9},"end":{"line":810,"column":23}}},"89":{"name":"(anonymous_89)","line":827,"loc":{"start":{"line":827,"column":18},"end":{"line":827,"column":66}}},"90":{"name":"(anonymous_90)","line":839,"loc":{"start":{"line":839,"column":19},"end":{"line":839,"column":34}}},"91":{"name":"(anonymous_91)","line":841,"loc":{"start":{"line":841,"column":9},"end":{"line":841,"column":23}}},"92":{"name":"(anonymous_92)","line":858,"loc":{"start":{"line":858,"column":20},"end":{"line":858,"column":59}}},"93":{"name":"(anonymous_93)","line":869,"loc":{"start":{"line":869,"column":19},"end":{"line":869,"column":34}}},"94":{"name":"(anonymous_94)","line":871,"loc":{"start":{"line":871,"column":9},"end":{"line":871,"column":23}}},"95":{"name":"(anonymous_95)","line":889,"loc":{"start":{"line":889,"column":25},"end":{"line":889,"column":73}}},"96":{"name":"(anonymous_96)","line":901,"loc":{"start":{"line":901,"column":19},"end":{"line":901,"column":34}}},"97":{"name":"(anonymous_97)","line":903,"loc":{"start":{"line":903,"column":9},"end":{"line":903,"column":23}}},"98":{"name":"(anonymous_98)","line":923,"loc":{"start":{"line":923,"column":23},"end":{"line":923,"column":79}}},"99":{"name":"(anonymous_99)","line":944,"loc":{"start":{"line":944,"column":19},"end":{"line":944,"column":34}}},"100":{"name":"(anonymous_100)","line":946,"loc":{"start":{"line":946,"column":9},"end":{"line":946,"column":23}}},"101":{"name":"(anonymous_101)","line":965,"loc":{"start":{"line":965,"column":28},"end":{"line":965,"column":84}}},"102":{"name":"(anonymous_102)","line":980,"loc":{"start":{"line":980,"column":19},"end":{"line":980,"column":34}}},"103":{"name":"(anonymous_103)","line":982,"loc":{"start":{"line":982,"column":9},"end":{"line":982,"column":23}}},"104":{"name":"(anonymous_104)","line":1000,"loc":{"start":{"line":1000,"column":38},"end":{"line":1000,"column":100}}},"105":{"name":"(anonymous_105)","line":1015,"loc":{"start":{"line":1015,"column":19},"end":{"line":1015,"column":34}}},"106":{"name":"(anonymous_106)","line":1017,"loc":{"start":{"line":1017,"column":9},"end":{"line":1017,"column":23}}},"107":{"name":"(anonymous_107)","line":1034,"loc":{"start":{"line":1034,"column":27},"end":{"line":1034,"column":72}}},"108":{"name":"(anonymous_108)","line":1048,"loc":{"start":{"line":1048,"column":19},"end":{"line":1048,"column":34}}},"109":{"name":"(anonymous_109)","line":1050,"loc":{"start":{"line":1050,"column":9},"end":{"line":1050,"column":23}}},"110":{"name":"(anonymous_110)","line":1069,"loc":{"start":{"line":1069,"column":27},"end":{"line":1069,"column":101}}},"111":{"name":"(anonymous_111)","line":1085,"loc":{"start":{"line":1085,"column":19},"end":{"line":1085,"column":34}}},"112":{"name":"(anonymous_112)","line":1087,"loc":{"start":{"line":1087,"column":9},"end":{"line":1087,"column":23}}},"113":{"name":"(anonymous_113)","line":1104,"loc":{"start":{"line":1104,"column":28},"end":{"line":1104,"column":56}}},"114":{"name":"(anonymous_114)","line":1114,"loc":{"start":{"line":1114,"column":19},"end":{"line":1114,"column":34}}},"115":{"name":"(anonymous_115)","line":1116,"loc":{"start":{"line":1116,"column":9},"end":{"line":1116,"column":23}}},"116":{"name":"(anonymous_116)","line":1133,"loc":{"start":{"line":1133,"column":28},"end":{"line":1133,"column":56}}},"117":{"name":"(anonymous_117)","line":1143,"loc":{"start":{"line":1143,"column":19},"end":{"line":1143,"column":34}}},"118":{"name":"(anonymous_118)","line":1145,"loc":{"start":{"line":1145,"column":9},"end":{"line":1145,"column":23}}},"119":{"name":"(anonymous_119)","line":1162,"loc":{"start":{"line":1162,"column":29},"end":{"line":1162,"column":58}}},"120":{"name":"(anonymous_120)","line":1175,"loc":{"start":{"line":1175,"column":19},"end":{"line":1175,"column":34}}},"121":{"name":"(anonymous_121)","line":1177,"loc":{"start":{"line":1177,"column":9},"end":{"line":1177,"column":23}}},"122":{"name":"(anonymous_122)","line":1193,"loc":{"start":{"line":1193,"column":22},"end":{"line":1193,"column":50}}},"123":{"name":"(anonymous_123)","line":1217,"loc":{"start":{"line":1217,"column":19},"end":{"line":1217,"column":34}}},"124":{"name":"(anonymous_124)","line":1219,"loc":{"start":{"line":1219,"column":9},"end":{"line":1219,"column":23}}},"125":{"name":"(anonymous_125)","line":1235,"loc":{"start":{"line":1235,"column":26},"end":{"line":1235,"column":45}}},"126":{"name":"(anonymous_126)","line":1245,"loc":{"start":{"line":1245,"column":19},"end":{"line":1245,"column":34}}},"127":{"name":"(anonymous_127)","line":1247,"loc":{"start":{"line":1247,"column":9},"end":{"line":1247,"column":23}}},"128":{"name":"(anonymous_128)","line":1261,"loc":{"start":{"line":1261,"column":22},"end":{"line":1261,"column":46}}},"129":{"name":"(anonymous_129)","line":1283,"loc":{"start":{"line":1283,"column":20},"end":{"line":1283,"column":48}}},"130":{"name":"(anonymous_130)","line":1294,"loc":{"start":{"line":1294,"column":19},"end":{"line":1294,"column":34}}},"131":{"name":"(anonymous_131)","line":1296,"loc":{"start":{"line":1296,"column":9},"end":{"line":1296,"column":23}}},"132":{"name":"(anonymous_132)","line":1313,"loc":{"start":{"line":1313,"column":25},"end":{"line":1313,"column":54}}},"133":{"name":"(anonymous_133)","line":1326,"loc":{"start":{"line":1326,"column":19},"end":{"line":1326,"column":34}}},"134":{"name":"(anonymous_134)","line":1328,"loc":{"start":{"line":1328,"column":9},"end":{"line":1328,"column":23}}},"135":{"name":"(anonymous_135)","line":1343,"loc":{"start":{"line":1343,"column":27},"end":{"line":1343,"column":56}}},"136":{"name":"(anonymous_136)","line":1355,"loc":{"start":{"line":1355,"column":19},"end":{"line":1355,"column":34}}},"137":{"name":"(anonymous_137)","line":1357,"loc":{"start":{"line":1357,"column":9},"end":{"line":1357,"column":23}}},"138":{"name":"(anonymous_138)","line":1371,"loc":{"start":{"line":1371,"column":22},"end":{"line":1371,"column":51}}},"139":{"name":"(anonymous_139)","line":1383,"loc":{"start":{"line":1383,"column":19},"end":{"line":1383,"column":34}}},"140":{"name":"(anonymous_140)","line":1385,"loc":{"start":{"line":1385,"column":9},"end":{"line":1385,"column":23}}},"141":{"name":"(anonymous_141)","line":1400,"loc":{"start":{"line":1400,"column":27},"end":{"line":1400,"column":56}}},"142":{"name":"(anonymous_142)","line":1412,"loc":{"start":{"line":1412,"column":19},"end":{"line":1412,"column":34}}},"143":{"name":"(anonymous_143)","line":1414,"loc":{"start":{"line":1414,"column":9},"end":{"line":1414,"column":23}}},"144":{"name":"(anonymous_144)","line":1428,"loc":{"start":{"line":1428,"column":22},"end":{"line":1428,"column":51}}},"145":{"name":"(anonymous_145)","line":1440,"loc":{"start":{"line":1440,"column":19},"end":{"line":1440,"column":34}}},"146":{"name":"(anonymous_146)","line":1442,"loc":{"start":{"line":1442,"column":9},"end":{"line":1442,"column":23}}},"147":{"name":"(anonymous_147)","line":1457,"loc":{"start":{"line":1457,"column":20},"end":{"line":1457,"column":48}}},"148":{"name":"(anonymous_148)","line":1468,"loc":{"start":{"line":1468,"column":19},"end":{"line":1468,"column":34}}},"149":{"name":"(anonymous_149)","line":1470,"loc":{"start":{"line":1470,"column":9},"end":{"line":1470,"column":23}}},"150":{"name":"(anonymous_150)","line":1487,"loc":{"start":{"line":1487,"column":25},"end":{"line":1487,"column":54}}},"151":{"name":"(anonymous_151)","line":1500,"loc":{"start":{"line":1500,"column":19},"end":{"line":1500,"column":34}}},"152":{"name":"(anonymous_152)","line":1502,"loc":{"start":{"line":1502,"column":9},"end":{"line":1502,"column":23}}},"153":{"name":"(anonymous_153)","line":1517,"loc":{"start":{"line":1517,"column":19},"end":{"line":1517,"column":47}}},"154":{"name":"(anonymous_154)","line":1528,"loc":{"start":{"line":1528,"column":19},"end":{"line":1528,"column":34}}},"155":{"name":"(anonymous_155)","line":1530,"loc":{"start":{"line":1530,"column":9},"end":{"line":1530,"column":23}}},"156":{"name":"(anonymous_156)","line":1545,"loc":{"start":{"line":1545,"column":18},"end":{"line":1545,"column":46}}},"157":{"name":"(anonymous_157)","line":1556,"loc":{"start":{"line":1556,"column":19},"end":{"line":1556,"column":34}}},"158":{"name":"(anonymous_158)","line":1558,"loc":{"start":{"line":1558,"column":9},"end":{"line":1558,"column":23}}},"159":{"name":"(anonymous_159)","line":1574,"loc":{"start":{"line":1574,"column":15},"end":{"line":1574,"column":43}}},"160":{"name":"(anonymous_160)","line":1588,"loc":{"start":{"line":1588,"column":19},"end":{"line":1588,"column":34}}},"161":{"name":"(anonymous_161)","line":1590,"loc":{"start":{"line":1590,"column":9},"end":{"line":1590,"column":23}}},"162":{"name":"(anonymous_162)","line":1606,"loc":{"start":{"line":1606,"column":17},"end":{"line":1606,"column":47}}},"163":{"name":"(anonymous_163)","line":1620,"loc":{"start":{"line":1620,"column":19},"end":{"line":1620,"column":34}}},"164":{"name":"(anonymous_164)","line":1622,"loc":{"start":{"line":1622,"column":9},"end":{"line":1622,"column":23}}},"165":{"name":"(anonymous_165)","line":1638,"loc":{"start":{"line":1638,"column":17},"end":{"line":1638,"column":45}}},"166":{"name":"(anonymous_166)","line":1652,"loc":{"start":{"line":1652,"column":19},"end":{"line":1652,"column":34}}},"167":{"name":"(anonymous_167)","line":1654,"loc":{"start":{"line":1654,"column":9},"end":{"line":1654,"column":23}}},"168":{"name":"(anonymous_168)","line":1670,"loc":{"start":{"line":1670,"column":19},"end":{"line":1670,"column":49}}},"169":{"name":"(anonymous_169)","line":1684,"loc":{"start":{"line":1684,"column":19},"end":{"line":1684,"column":34}}},"170":{"name":"(anonymous_170)","line":1686,"loc":{"start":{"line":1686,"column":9},"end":{"line":1686,"column":23}}},"171":{"name":"(anonymous_171)","line":1704,"loc":{"start":{"line":1704,"column":20},"end":{"line":1704,"column":48}}},"172":{"name":"(anonymous_172)","line":1718,"loc":{"start":{"line":1718,"column":19},"end":{"line":1718,"column":34}}},"173":{"name":"(anonymous_173)","line":1720,"loc":{"start":{"line":1720,"column":9},"end":{"line":1720,"column":23}}},"174":{"name":"(anonymous_174)","line":1735,"loc":{"start":{"line":1735,"column":22},"end":{"line":1735,"column":50}}},"175":{"name":"(anonymous_175)","line":1750,"loc":{"start":{"line":1750,"column":19},"end":{"line":1750,"column":34}}},"176":{"name":"(anonymous_176)","line":1752,"loc":{"start":{"line":1752,"column":9},"end":{"line":1752,"column":23}}},"177":{"name":"(anonymous_177)","line":1769,"loc":{"start":{"line":1769,"column":24},"end":{"line":1769,"column":76}}},"178":{"name":"(anonymous_178)","line":1782,"loc":{"start":{"line":1782,"column":19},"end":{"line":1782,"column":34}}},"179":{"name":"(anonymous_179)","line":1784,"loc":{"start":{"line":1784,"column":9},"end":{"line":1784,"column":23}}},"180":{"name":"(anonymous_180)","line":1802,"loc":{"start":{"line":1802,"column":22},"end":{"line":1802,"column":52}}},"181":{"name":"(anonymous_181)","line":1816,"loc":{"start":{"line":1816,"column":19},"end":{"line":1816,"column":34}}},"182":{"name":"(anonymous_182)","line":1818,"loc":{"start":{"line":1818,"column":9},"end":{"line":1818,"column":23}}},"183":{"name":"(anonymous_183)","line":1833,"loc":{"start":{"line":1833,"column":18},"end":{"line":1833,"column":46}}},"184":{"name":"(anonymous_184)","line":1845,"loc":{"start":{"line":1845,"column":19},"end":{"line":1845,"column":34}}},"185":{"name":"(anonymous_185)","line":1847,"loc":{"start":{"line":1847,"column":9},"end":{"line":1847,"column":23}}},"186":{"name":"(anonymous_186)","line":1862,"loc":{"start":{"line":1862,"column":24},"end":{"line":1862,"column":52}}},"187":{"name":"(anonymous_187)","line":1874,"loc":{"start":{"line":1874,"column":19},"end":{"line":1874,"column":34}}},"188":{"name":"(anonymous_188)","line":1876,"loc":{"start":{"line":1876,"column":9},"end":{"line":1876,"column":23}}},"189":{"name":"(anonymous_189)","line":1891,"loc":{"start":{"line":1891,"column":17},"end":{"line":1891,"column":45}}},"190":{"name":"(anonymous_190)","line":1902,"loc":{"start":{"line":1902,"column":19},"end":{"line":1902,"column":34}}},"191":{"name":"(anonymous_191)","line":1904,"loc":{"start":{"line":1904,"column":9},"end":{"line":1904,"column":23}}},"192":{"name":"(anonymous_192)","line":1920,"loc":{"start":{"line":1920,"column":15},"end":{"line":1920,"column":55}}},"193":{"name":"(anonymous_193)","line":1931,"loc":{"start":{"line":1931,"column":19},"end":{"line":1931,"column":34}}},"194":{"name":"(anonymous_194)","line":1933,"loc":{"start":{"line":1933,"column":9},"end":{"line":1933,"column":23}}},"195":{"name":"(anonymous_195)","line":1949,"loc":{"start":{"line":1949,"column":27},"end":{"line":1949,"column":67}}},"196":{"name":"(anonymous_196)","line":1960,"loc":{"start":{"line":1960,"column":19},"end":{"line":1960,"column":34}}},"197":{"name":"(anonymous_197)","line":1962,"loc":{"start":{"line":1962,"column":9},"end":{"line":1962,"column":23}}},"198":{"name":"(anonymous_198)","line":1971,"loc":{"start":{"line":1971,"column":28},"end":{"line":1971,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":40}},"4":{"start":{"line":11,"column":0},"end":{"line":1969,"column":2}},"5":{"start":{"line":13,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":14,"column":6},"end":{"line":18,"column":7}},"7":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"8":{"start":{"line":16,"column":10},"end":{"line":16,"column":54}},"9":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"10":{"start":{"line":24,"column":6},"end":{"line":24,"column":13}},"11":{"start":{"line":26,"column":4},"end":{"line":30,"column":5}},"12":{"start":{"line":27,"column":6},"end":{"line":29,"column":7}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":53}},"14":{"start":{"line":34,"column":4},"end":{"line":42,"column":6}},"15":{"start":{"line":35,"column":6},"end":{"line":41,"column":9}},"16":{"start":{"line":36,"column":8},"end":{"line":40,"column":9}},"17":{"start":{"line":37,"column":10},"end":{"line":37,"column":24}},"18":{"start":{"line":39,"column":10},"end":{"line":39,"column":26}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"20":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"21":{"start":{"line":48,"column":6},"end":{"line":50,"column":9}},"22":{"start":{"line":55,"column":4},"end":{"line":59,"column":5}},"23":{"start":{"line":56,"column":6},"end":{"line":58,"column":7}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":50}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":29}},"27":{"start":{"line":71,"column":4},"end":{"line":71,"column":46}},"28":{"start":{"line":75,"column":4},"end":{"line":75,"column":54}},"29":{"start":{"line":79,"column":4},"end":{"line":79,"column":52}},"30":{"start":{"line":83,"column":4},"end":{"line":83,"column":54}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":52}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":46}},"33":{"start":{"line":95,"column":4},"end":{"line":95,"column":43}},"34":{"start":{"line":99,"column":4},"end":{"line":99,"column":47}},"35":{"start":{"line":103,"column":4},"end":{"line":103,"column":46}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":47}},"37":{"start":{"line":111,"column":4},"end":{"line":111,"column":38}},"38":{"start":{"line":115,"column":4},"end":{"line":115,"column":42}},"39":{"start":{"line":119,"column":4},"end":{"line":119,"column":41}},"40":{"start":{"line":123,"column":4},"end":{"line":123,"column":42}},"41":{"start":{"line":127,"column":4},"end":{"line":127,"column":41}},"42":{"start":{"line":131,"column":4},"end":{"line":131,"column":48}},"43":{"start":{"line":132,"column":4},"end":{"line":132,"column":45}},"44":{"start":{"line":136,"column":4},"end":{"line":140,"column":5}},"45":{"start":{"line":137,"column":6},"end":{"line":137,"column":13}},"46":{"start":{"line":139,"column":6},"end":{"line":139,"column":46}},"47":{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},"48":{"start":{"line":145,"column":6},"end":{"line":145,"column":13}},"49":{"start":{"line":147,"column":6},"end":{"line":147,"column":46}},"50":{"start":{"line":162,"column":4},"end":{"line":162,"column":23}},"51":{"start":{"line":163,"column":4},"end":{"line":167,"column":5}},"52":{"start":{"line":164,"column":6},"end":{"line":164,"column":31}},"53":{"start":{"line":166,"column":6},"end":{"line":166,"column":32}},"54":{"start":{"line":169,"column":4},"end":{"line":169,"column":27}},"55":{"start":{"line":170,"column":4},"end":{"line":174,"column":5}},"56":{"start":{"line":171,"column":6},"end":{"line":173,"column":9}},"57":{"start":{"line":172,"column":8},"end":{"line":172,"column":42}},"58":{"start":{"line":176,"column":4},"end":{"line":179,"column":15}},"59":{"start":{"line":181,"column":4},"end":{"line":181,"column":57}},"60":{"start":{"line":183,"column":4},"end":{"line":183,"column":65}},"61":{"start":{"line":185,"column":4},"end":{"line":193,"column":5}},"62":{"start":{"line":186,"column":6},"end":{"line":190,"column":9}},"63":{"start":{"line":187,"column":8},"end":{"line":187,"column":35}},"64":{"start":{"line":189,"column":8},"end":{"line":189,"column":28}},"65":{"start":{"line":192,"column":6},"end":{"line":192,"column":21}},"66":{"start":{"line":207,"column":4},"end":{"line":207,"column":23}},"67":{"start":{"line":208,"column":4},"end":{"line":212,"column":5}},"68":{"start":{"line":209,"column":6},"end":{"line":209,"column":31}},"69":{"start":{"line":211,"column":6},"end":{"line":211,"column":32}},"70":{"start":{"line":214,"column":4},"end":{"line":214,"column":27}},"71":{"start":{"line":215,"column":4},"end":{"line":219,"column":5}},"72":{"start":{"line":216,"column":6},"end":{"line":218,"column":9}},"73":{"start":{"line":217,"column":8},"end":{"line":217,"column":42}},"74":{"start":{"line":221,"column":4},"end":{"line":226,"column":15}},"75":{"start":{"line":228,"column":4},"end":{"line":228,"column":57}},"76":{"start":{"line":229,"column":4},"end":{"line":229,"column":53}},"77":{"start":{"line":231,"column":4},"end":{"line":231,"column":65}},"78":{"start":{"line":233,"column":4},"end":{"line":241,"column":5}},"79":{"start":{"line":234,"column":6},"end":{"line":238,"column":9}},"80":{"start":{"line":235,"column":8},"end":{"line":235,"column":35}},"81":{"start":{"line":237,"column":8},"end":{"line":237,"column":28}},"82":{"start":{"line":240,"column":6},"end":{"line":240,"column":21}},"83":{"start":{"line":255,"column":4},"end":{"line":255,"column":23}},"84":{"start":{"line":256,"column":4},"end":{"line":260,"column":5}},"85":{"start":{"line":257,"column":6},"end":{"line":257,"column":31}},"86":{"start":{"line":259,"column":6},"end":{"line":259,"column":32}},"87":{"start":{"line":262,"column":4},"end":{"line":262,"column":27}},"88":{"start":{"line":263,"column":4},"end":{"line":267,"column":5}},"89":{"start":{"line":264,"column":6},"end":{"line":266,"column":9}},"90":{"start":{"line":265,"column":8},"end":{"line":265,"column":42}},"91":{"start":{"line":269,"column":4},"end":{"line":272,"column":15}},"92":{"start":{"line":274,"column":4},"end":{"line":274,"column":57}},"93":{"start":{"line":276,"column":4},"end":{"line":276,"column":65}},"94":{"start":{"line":278,"column":4},"end":{"line":286,"column":5}},"95":{"start":{"line":279,"column":6},"end":{"line":283,"column":9}},"96":{"start":{"line":280,"column":8},"end":{"line":280,"column":35}},"97":{"start":{"line":282,"column":8},"end":{"line":282,"column":28}},"98":{"start":{"line":285,"column":6},"end":{"line":285,"column":21}},"99":{"start":{"line":300,"column":4},"end":{"line":300,"column":23}},"100":{"start":{"line":301,"column":4},"end":{"line":305,"column":5}},"101":{"start":{"line":302,"column":6},"end":{"line":302,"column":31}},"102":{"start":{"line":304,"column":6},"end":{"line":304,"column":32}},"103":{"start":{"line":307,"column":4},"end":{"line":307,"column":27}},"104":{"start":{"line":308,"column":4},"end":{"line":312,"column":5}},"105":{"start":{"line":309,"column":6},"end":{"line":311,"column":9}},"106":{"start":{"line":310,"column":8},"end":{"line":310,"column":42}},"107":{"start":{"line":314,"column":4},"end":{"line":319,"column":15}},"108":{"start":{"line":321,"column":4},"end":{"line":321,"column":57}},"109":{"start":{"line":322,"column":4},"end":{"line":322,"column":53}},"110":{"start":{"line":324,"column":4},"end":{"line":324,"column":65}},"111":{"start":{"line":326,"column":4},"end":{"line":334,"column":5}},"112":{"start":{"line":327,"column":6},"end":{"line":331,"column":9}},"113":{"start":{"line":328,"column":8},"end":{"line":328,"column":35}},"114":{"start":{"line":330,"column":8},"end":{"line":330,"column":28}},"115":{"start":{"line":333,"column":6},"end":{"line":333,"column":21}},"116":{"start":{"line":346,"column":4},"end":{"line":348,"column":15}},"117":{"start":{"line":350,"column":4},"end":{"line":350,"column":57}},"118":{"start":{"line":352,"column":4},"end":{"line":352,"column":65}},"119":{"start":{"line":354,"column":4},"end":{"line":362,"column":5}},"120":{"start":{"line":355,"column":6},"end":{"line":359,"column":9}},"121":{"start":{"line":356,"column":8},"end":{"line":356,"column":29}},"122":{"start":{"line":358,"column":8},"end":{"line":358,"column":22}},"123":{"start":{"line":361,"column":6},"end":{"line":361,"column":21}},"124":{"start":{"line":374,"column":4},"end":{"line":379,"column":15}},"125":{"start":{"line":381,"column":4},"end":{"line":381,"column":57}},"126":{"start":{"line":383,"column":4},"end":{"line":383,"column":65}},"127":{"start":{"line":385,"column":4},"end":{"line":393,"column":5}},"128":{"start":{"line":386,"column":6},"end":{"line":390,"column":9}},"129":{"start":{"line":387,"column":8},"end":{"line":387,"column":29}},"130":{"start":{"line":389,"column":8},"end":{"line":389,"column":22}},"131":{"start":{"line":392,"column":6},"end":{"line":392,"column":21}},"132":{"start":{"line":409,"column":4},"end":{"line":415,"column":15}},"133":{"start":{"line":417,"column":4},"end":{"line":417,"column":57}},"134":{"start":{"line":418,"column":4},"end":{"line":418,"column":47}},"135":{"start":{"line":420,"column":4},"end":{"line":420,"column":65}},"136":{"start":{"line":422,"column":4},"end":{"line":430,"column":5}},"137":{"start":{"line":423,"column":6},"end":{"line":427,"column":9}},"138":{"start":{"line":424,"column":8},"end":{"line":424,"column":29}},"139":{"start":{"line":426,"column":8},"end":{"line":426,"column":22}},"140":{"start":{"line":429,"column":6},"end":{"line":429,"column":21}},"141":{"start":{"line":444,"column":4},"end":{"line":444,"column":60}},"142":{"start":{"line":458,"column":4},"end":{"line":458,"column":61}},"143":{"start":{"line":472,"column":4},"end":{"line":472,"column":60}},"144":{"start":{"line":486,"column":4},"end":{"line":486,"column":63}},"145":{"start":{"line":500,"column":4},"end":{"line":502,"column":15}},"146":{"start":{"line":504,"column":4},"end":{"line":504,"column":57}},"147":{"start":{"line":505,"column":4},"end":{"line":505,"column":47}},"148":{"start":{"line":507,"column":4},"end":{"line":507,"column":65}},"149":{"start":{"line":509,"column":4},"end":{"line":517,"column":5}},"150":{"start":{"line":510,"column":6},"end":{"line":514,"column":9}},"151":{"start":{"line":511,"column":8},"end":{"line":511,"column":29}},"152":{"start":{"line":513,"column":8},"end":{"line":513,"column":22}},"153":{"start":{"line":516,"column":6},"end":{"line":516,"column":21}},"154":{"start":{"line":531,"column":4},"end":{"line":533,"column":15}},"155":{"start":{"line":535,"column":4},"end":{"line":535,"column":57}},"156":{"start":{"line":536,"column":4},"end":{"line":536,"column":47}},"157":{"start":{"line":538,"column":4},"end":{"line":538,"column":65}},"158":{"start":{"line":540,"column":4},"end":{"line":548,"column":5}},"159":{"start":{"line":541,"column":6},"end":{"line":545,"column":9}},"160":{"start":{"line":542,"column":8},"end":{"line":542,"column":29}},"161":{"start":{"line":544,"column":8},"end":{"line":544,"column":22}},"162":{"start":{"line":547,"column":6},"end":{"line":547,"column":21}},"163":{"start":{"line":562,"column":4},"end":{"line":567,"column":15}},"164":{"start":{"line":569,"column":4},"end":{"line":569,"column":57}},"165":{"start":{"line":571,"column":4},"end":{"line":571,"column":65}},"166":{"start":{"line":573,"column":4},"end":{"line":581,"column":5}},"167":{"start":{"line":574,"column":6},"end":{"line":578,"column":9}},"168":{"start":{"line":575,"column":8},"end":{"line":575,"column":29}},"169":{"start":{"line":577,"column":8},"end":{"line":577,"column":22}},"170":{"start":{"line":580,"column":6},"end":{"line":580,"column":21}},"171":{"start":{"line":593,"column":4},"end":{"line":595,"column":15}},"172":{"start":{"line":597,"column":4},"end":{"line":597,"column":57}},"173":{"start":{"line":599,"column":4},"end":{"line":599,"column":65}},"174":{"start":{"line":601,"column":4},"end":{"line":609,"column":5}},"175":{"start":{"line":602,"column":6},"end":{"line":606,"column":9}},"176":{"start":{"line":603,"column":8},"end":{"line":603,"column":29}},"177":{"start":{"line":605,"column":8},"end":{"line":605,"column":22}},"178":{"start":{"line":608,"column":6},"end":{"line":608,"column":21}},"179":{"start":{"line":622,"column":4},"end":{"line":624,"column":15}},"180":{"start":{"line":626,"column":4},"end":{"line":626,"column":57}},"181":{"start":{"line":628,"column":4},"end":{"line":628,"column":65}},"182":{"start":{"line":630,"column":4},"end":{"line":638,"column":5}},"183":{"start":{"line":631,"column":6},"end":{"line":635,"column":9}},"184":{"start":{"line":632,"column":8},"end":{"line":632,"column":29}},"185":{"start":{"line":634,"column":8},"end":{"line":634,"column":22}},"186":{"start":{"line":637,"column":6},"end":{"line":637,"column":21}},"187":{"start":{"line":651,"column":4},"end":{"line":653,"column":15}},"188":{"start":{"line":655,"column":4},"end":{"line":655,"column":57}},"189":{"start":{"line":657,"column":4},"end":{"line":657,"column":65}},"190":{"start":{"line":659,"column":4},"end":{"line":667,"column":5}},"191":{"start":{"line":660,"column":6},"end":{"line":664,"column":9}},"192":{"start":{"line":661,"column":8},"end":{"line":661,"column":29}},"193":{"start":{"line":663,"column":8},"end":{"line":663,"column":22}},"194":{"start":{"line":666,"column":6},"end":{"line":666,"column":21}},"195":{"start":{"line":682,"column":4},"end":{"line":682,"column":13}},"196":{"start":{"line":683,"column":4},"end":{"line":687,"column":5}},"197":{"start":{"line":684,"column":6},"end":{"line":684,"column":70}},"198":{"start":{"line":686,"column":6},"end":{"line":686,"column":32}},"199":{"start":{"line":689,"column":4},"end":{"line":691,"column":15}},"200":{"start":{"line":693,"column":4},"end":{"line":693,"column":57}},"201":{"start":{"line":694,"column":4},"end":{"line":694,"column":47}},"202":{"start":{"line":696,"column":4},"end":{"line":696,"column":65}},"203":{"start":{"line":698,"column":4},"end":{"line":706,"column":5}},"204":{"start":{"line":699,"column":6},"end":{"line":703,"column":9}},"205":{"start":{"line":700,"column":8},"end":{"line":700,"column":29}},"206":{"start":{"line":702,"column":8},"end":{"line":702,"column":22}},"207":{"start":{"line":705,"column":6},"end":{"line":705,"column":21}},"208":{"start":{"line":720,"column":4},"end":{"line":722,"column":15}},"209":{"start":{"line":724,"column":4},"end":{"line":724,"column":57}},"210":{"start":{"line":725,"column":4},"end":{"line":725,"column":47}},"211":{"start":{"line":727,"column":4},"end":{"line":727,"column":65}},"212":{"start":{"line":729,"column":4},"end":{"line":737,"column":5}},"213":{"start":{"line":730,"column":6},"end":{"line":734,"column":9}},"214":{"start":{"line":731,"column":8},"end":{"line":731,"column":29}},"215":{"start":{"line":733,"column":8},"end":{"line":733,"column":22}},"216":{"start":{"line":736,"column":6},"end":{"line":736,"column":21}},"217":{"start":{"line":751,"column":4},"end":{"line":754,"column":14}},"218":{"start":{"line":756,"column":4},"end":{"line":756,"column":57}},"219":{"start":{"line":758,"column":4},"end":{"line":758,"column":65}},"220":{"start":{"line":760,"column":4},"end":{"line":768,"column":5}},"221":{"start":{"line":761,"column":6},"end":{"line":765,"column":9}},"222":{"start":{"line":762,"column":8},"end":{"line":762,"column":29}},"223":{"start":{"line":764,"column":8},"end":{"line":764,"column":22}},"224":{"start":{"line":767,"column":6},"end":{"line":767,"column":21}},"225":{"start":{"line":783,"column":4},"end":{"line":783,"column":23}},"226":{"start":{"line":784,"column":4},"end":{"line":788,"column":5}},"227":{"start":{"line":785,"column":6},"end":{"line":785,"column":31}},"228":{"start":{"line":787,"column":6},"end":{"line":787,"column":32}},"229":{"start":{"line":790,"column":4},"end":{"line":790,"column":50}},"230":{"start":{"line":791,"column":4},"end":{"line":795,"column":5}},"231":{"start":{"line":792,"column":6},"end":{"line":794,"column":9}},"232":{"start":{"line":793,"column":8},"end":{"line":793,"column":42}},"233":{"start":{"line":797,"column":4},"end":{"line":801,"column":15}},"234":{"start":{"line":803,"column":4},"end":{"line":803,"column":57}},"235":{"start":{"line":805,"column":4},"end":{"line":805,"column":66}},"236":{"start":{"line":807,"column":4},"end":{"line":815,"column":5}},"237":{"start":{"line":808,"column":6},"end":{"line":812,"column":9}},"238":{"start":{"line":809,"column":8},"end":{"line":809,"column":35}},"239":{"start":{"line":811,"column":8},"end":{"line":811,"column":28}},"240":{"start":{"line":814,"column":6},"end":{"line":814,"column":21}},"241":{"start":{"line":828,"column":4},"end":{"line":832,"column":15}},"242":{"start":{"line":834,"column":4},"end":{"line":834,"column":57}},"243":{"start":{"line":836,"column":4},"end":{"line":836,"column":65}},"244":{"start":{"line":838,"column":4},"end":{"line":846,"column":5}},"245":{"start":{"line":839,"column":6},"end":{"line":843,"column":9}},"246":{"start":{"line":840,"column":8},"end":{"line":840,"column":29}},"247":{"start":{"line":842,"column":8},"end":{"line":842,"column":22}},"248":{"start":{"line":845,"column":6},"end":{"line":845,"column":21}},"249":{"start":{"line":859,"column":4},"end":{"line":862,"column":15}},"250":{"start":{"line":864,"column":4},"end":{"line":864,"column":57}},"251":{"start":{"line":866,"column":4},"end":{"line":866,"column":65}},"252":{"start":{"line":868,"column":4},"end":{"line":876,"column":5}},"253":{"start":{"line":869,"column":6},"end":{"line":873,"column":9}},"254":{"start":{"line":870,"column":8},"end":{"line":870,"column":29}},"255":{"start":{"line":872,"column":8},"end":{"line":872,"column":22}},"256":{"start":{"line":875,"column":6},"end":{"line":875,"column":21}},"257":{"start":{"line":890,"column":4},"end":{"line":894,"column":15}},"258":{"start":{"line":896,"column":4},"end":{"line":896,"column":57}},"259":{"start":{"line":898,"column":4},"end":{"line":898,"column":65}},"260":{"start":{"line":900,"column":4},"end":{"line":908,"column":5}},"261":{"start":{"line":901,"column":6},"end":{"line":905,"column":9}},"262":{"start":{"line":902,"column":8},"end":{"line":902,"column":29}},"263":{"start":{"line":904,"column":8},"end":{"line":904,"column":22}},"264":{"start":{"line":907,"column":6},"end":{"line":907,"column":21}},"265":{"start":{"line":924,"column":4},"end":{"line":924,"column":21}},"266":{"start":{"line":925,"column":4},"end":{"line":929,"column":5}},"267":{"start":{"line":926,"column":6},"end":{"line":926,"column":35}},"268":{"start":{"line":928,"column":6},"end":{"line":928,"column":28}},"269":{"start":{"line":930,"column":4},"end":{"line":936,"column":15}},"270":{"start":{"line":938,"column":4},"end":{"line":938,"column":47}},"271":{"start":{"line":939,"column":4},"end":{"line":939,"column":57}},"272":{"start":{"line":941,"column":4},"end":{"line":941,"column":66}},"273":{"start":{"line":943,"column":4},"end":{"line":951,"column":5}},"274":{"start":{"line":944,"column":6},"end":{"line":948,"column":9}},"275":{"start":{"line":945,"column":8},"end":{"line":945,"column":29}},"276":{"start":{"line":947,"column":8},"end":{"line":947,"column":22}},"277":{"start":{"line":950,"column":6},"end":{"line":950,"column":21}},"278":{"start":{"line":966,"column":4},"end":{"line":972,"column":14}},"279":{"start":{"line":974,"column":4},"end":{"line":974,"column":46}},"280":{"start":{"line":975,"column":4},"end":{"line":975,"column":57}},"281":{"start":{"line":977,"column":4},"end":{"line":977,"column":65}},"282":{"start":{"line":979,"column":4},"end":{"line":987,"column":5}},"283":{"start":{"line":980,"column":6},"end":{"line":984,"column":9}},"284":{"start":{"line":981,"column":8},"end":{"line":981,"column":29}},"285":{"start":{"line":983,"column":8},"end":{"line":983,"column":22}},"286":{"start":{"line":986,"column":6},"end":{"line":986,"column":21}},"287":{"start":{"line":1001,"column":4},"end":{"line":1008,"column":14}},"288":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":57}},"289":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":65}},"290":{"start":{"line":1014,"column":4},"end":{"line":1022,"column":5}},"291":{"start":{"line":1015,"column":6},"end":{"line":1019,"column":9}},"292":{"start":{"line":1016,"column":8},"end":{"line":1016,"column":29}},"293":{"start":{"line":1018,"column":8},"end":{"line":1018,"column":22}},"294":{"start":{"line":1021,"column":6},"end":{"line":1021,"column":21}},"295":{"start":{"line":1035,"column":4},"end":{"line":1041,"column":14}},"296":{"start":{"line":1043,"column":4},"end":{"line":1043,"column":57}},"297":{"start":{"line":1045,"column":4},"end":{"line":1045,"column":65}},"298":{"start":{"line":1047,"column":4},"end":{"line":1055,"column":5}},"299":{"start":{"line":1048,"column":6},"end":{"line":1052,"column":9}},"300":{"start":{"line":1049,"column":8},"end":{"line":1049,"column":29}},"301":{"start":{"line":1051,"column":8},"end":{"line":1051,"column":22}},"302":{"start":{"line":1054,"column":6},"end":{"line":1054,"column":21}},"303":{"start":{"line":1070,"column":4},"end":{"line":1077,"column":14}},"304":{"start":{"line":1079,"column":4},"end":{"line":1079,"column":57}},"305":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":46}},"306":{"start":{"line":1082,"column":4},"end":{"line":1082,"column":66}},"307":{"start":{"line":1084,"column":4},"end":{"line":1092,"column":5}},"308":{"start":{"line":1085,"column":6},"end":{"line":1089,"column":9}},"309":{"start":{"line":1086,"column":8},"end":{"line":1086,"column":29}},"310":{"start":{"line":1088,"column":8},"end":{"line":1088,"column":22}},"311":{"start":{"line":1091,"column":6},"end":{"line":1091,"column":21}},"312":{"start":{"line":1105,"column":4},"end":{"line":1107,"column":15}},"313":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":57}},"314":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":65}},"315":{"start":{"line":1113,"column":4},"end":{"line":1121,"column":5}},"316":{"start":{"line":1114,"column":6},"end":{"line":1118,"column":9}},"317":{"start":{"line":1115,"column":8},"end":{"line":1115,"column":29}},"318":{"start":{"line":1117,"column":8},"end":{"line":1117,"column":22}},"319":{"start":{"line":1120,"column":6},"end":{"line":1120,"column":21}},"320":{"start":{"line":1134,"column":4},"end":{"line":1136,"column":15}},"321":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":57}},"322":{"start":{"line":1140,"column":4},"end":{"line":1140,"column":65}},"323":{"start":{"line":1142,"column":4},"end":{"line":1150,"column":5}},"324":{"start":{"line":1143,"column":6},"end":{"line":1147,"column":9}},"325":{"start":{"line":1144,"column":8},"end":{"line":1144,"column":29}},"326":{"start":{"line":1146,"column":8},"end":{"line":1146,"column":22}},"327":{"start":{"line":1149,"column":6},"end":{"line":1149,"column":21}},"328":{"start":{"line":1163,"column":4},"end":{"line":1168,"column":15}},"329":{"start":{"line":1170,"column":4},"end":{"line":1170,"column":57}},"330":{"start":{"line":1172,"column":4},"end":{"line":1172,"column":65}},"331":{"start":{"line":1174,"column":4},"end":{"line":1182,"column":5}},"332":{"start":{"line":1175,"column":6},"end":{"line":1179,"column":9}},"333":{"start":{"line":1176,"column":8},"end":{"line":1176,"column":29}},"334":{"start":{"line":1178,"column":8},"end":{"line":1178,"column":22}},"335":{"start":{"line":1181,"column":6},"end":{"line":1181,"column":21}},"336":{"start":{"line":1194,"column":4},"end":{"line":1196,"column":15}},"337":{"start":{"line":1198,"column":4},"end":{"line":1198,"column":19}},"338":{"start":{"line":1199,"column":4},"end":{"line":1199,"column":76}},"339":{"start":{"line":1200,"column":4},"end":{"line":1209,"column":5}},"340":{"start":{"line":1201,"column":6},"end":{"line":1208,"column":7}},"341":{"start":{"line":1202,"column":8},"end":{"line":1207,"column":9}},"342":{"start":{"line":1204,"column":10},"end":{"line":1204,"column":52}},"343":{"start":{"line":1206,"column":10},"end":{"line":1206,"column":42}},"344":{"start":{"line":1211,"column":4},"end":{"line":1211,"column":57}},"345":{"start":{"line":1212,"column":4},"end":{"line":1212,"column":45}},"346":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":65}},"347":{"start":{"line":1216,"column":4},"end":{"line":1224,"column":5}},"348":{"start":{"line":1217,"column":6},"end":{"line":1221,"column":9}},"349":{"start":{"line":1218,"column":8},"end":{"line":1218,"column":29}},"350":{"start":{"line":1220,"column":8},"end":{"line":1220,"column":22}},"351":{"start":{"line":1223,"column":6},"end":{"line":1223,"column":21}},"352":{"start":{"line":1236,"column":4},"end":{"line":1238,"column":15}},"353":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":57}},"354":{"start":{"line":1242,"column":4},"end":{"line":1242,"column":65}},"355":{"start":{"line":1244,"column":4},"end":{"line":1252,"column":5}},"356":{"start":{"line":1245,"column":6},"end":{"line":1249,"column":9}},"357":{"start":{"line":1246,"column":8},"end":{"line":1246,"column":29}},"358":{"start":{"line":1248,"column":8},"end":{"line":1248,"column":22}},"359":{"start":{"line":1251,"column":6},"end":{"line":1251,"column":21}},"360":{"start":{"line":1262,"column":4},"end":{"line":1271,"column":15}},"361":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":28}},"362":{"start":{"line":1284,"column":4},"end":{"line":1287,"column":15}},"363":{"start":{"line":1289,"column":4},"end":{"line":1289,"column":57}},"364":{"start":{"line":1291,"column":4},"end":{"line":1291,"column":65}},"365":{"start":{"line":1293,"column":4},"end":{"line":1301,"column":5}},"366":{"start":{"line":1294,"column":6},"end":{"line":1298,"column":9}},"367":{"start":{"line":1295,"column":8},"end":{"line":1295,"column":29}},"368":{"start":{"line":1297,"column":8},"end":{"line":1297,"column":22}},"369":{"start":{"line":1300,"column":6},"end":{"line":1300,"column":21}},"370":{"start":{"line":1314,"column":4},"end":{"line":1319,"column":15}},"371":{"start":{"line":1321,"column":4},"end":{"line":1321,"column":57}},"372":{"start":{"line":1323,"column":4},"end":{"line":1323,"column":65}},"373":{"start":{"line":1325,"column":4},"end":{"line":1333,"column":5}},"374":{"start":{"line":1326,"column":6},"end":{"line":1330,"column":9}},"375":{"start":{"line":1327,"column":8},"end":{"line":1327,"column":29}},"376":{"start":{"line":1329,"column":8},"end":{"line":1329,"column":22}},"377":{"start":{"line":1332,"column":6},"end":{"line":1332,"column":21}},"378":{"start":{"line":1344,"column":4},"end":{"line":1348,"column":15}},"379":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":57}},"380":{"start":{"line":1352,"column":4},"end":{"line":1352,"column":65}},"381":{"start":{"line":1354,"column":4},"end":{"line":1362,"column":5}},"382":{"start":{"line":1355,"column":6},"end":{"line":1359,"column":9}},"383":{"start":{"line":1356,"column":8},"end":{"line":1356,"column":29}},"384":{"start":{"line":1358,"column":8},"end":{"line":1358,"column":22}},"385":{"start":{"line":1361,"column":6},"end":{"line":1361,"column":21}},"386":{"start":{"line":1372,"column":4},"end":{"line":1376,"column":15}},"387":{"start":{"line":1378,"column":4},"end":{"line":1378,"column":57}},"388":{"start":{"line":1380,"column":4},"end":{"line":1380,"column":65}},"389":{"start":{"line":1382,"column":4},"end":{"line":1390,"column":5}},"390":{"start":{"line":1383,"column":6},"end":{"line":1387,"column":9}},"391":{"start":{"line":1384,"column":8},"end":{"line":1384,"column":29}},"392":{"start":{"line":1386,"column":8},"end":{"line":1386,"column":22}},"393":{"start":{"line":1389,"column":6},"end":{"line":1389,"column":21}},"394":{"start":{"line":1401,"column":4},"end":{"line":1405,"column":15}},"395":{"start":{"line":1407,"column":4},"end":{"line":1407,"column":57}},"396":{"start":{"line":1409,"column":4},"end":{"line":1409,"column":65}},"397":{"start":{"line":1411,"column":4},"end":{"line":1419,"column":5}},"398":{"start":{"line":1412,"column":6},"end":{"line":1416,"column":9}},"399":{"start":{"line":1413,"column":8},"end":{"line":1413,"column":29}},"400":{"start":{"line":1415,"column":8},"end":{"line":1415,"column":22}},"401":{"start":{"line":1418,"column":6},"end":{"line":1418,"column":21}},"402":{"start":{"line":1429,"column":4},"end":{"line":1433,"column":15}},"403":{"start":{"line":1435,"column":4},"end":{"line":1435,"column":57}},"404":{"start":{"line":1437,"column":4},"end":{"line":1437,"column":65}},"405":{"start":{"line":1439,"column":4},"end":{"line":1447,"column":5}},"406":{"start":{"line":1440,"column":6},"end":{"line":1444,"column":9}},"407":{"start":{"line":1441,"column":8},"end":{"line":1441,"column":29}},"408":{"start":{"line":1443,"column":8},"end":{"line":1443,"column":22}},"409":{"start":{"line":1446,"column":6},"end":{"line":1446,"column":21}},"410":{"start":{"line":1458,"column":4},"end":{"line":1461,"column":15}},"411":{"start":{"line":1463,"column":4},"end":{"line":1463,"column":57}},"412":{"start":{"line":1465,"column":4},"end":{"line":1465,"column":65}},"413":{"start":{"line":1467,"column":4},"end":{"line":1475,"column":5}},"414":{"start":{"line":1468,"column":6},"end":{"line":1472,"column":9}},"415":{"start":{"line":1469,"column":8},"end":{"line":1469,"column":29}},"416":{"start":{"line":1471,"column":8},"end":{"line":1471,"column":22}},"417":{"start":{"line":1474,"column":6},"end":{"line":1474,"column":21}},"418":{"start":{"line":1488,"column":4},"end":{"line":1493,"column":15}},"419":{"start":{"line":1495,"column":4},"end":{"line":1495,"column":57}},"420":{"start":{"line":1497,"column":4},"end":{"line":1497,"column":65}},"421":{"start":{"line":1499,"column":4},"end":{"line":1507,"column":5}},"422":{"start":{"line":1500,"column":6},"end":{"line":1504,"column":9}},"423":{"start":{"line":1501,"column":8},"end":{"line":1501,"column":29}},"424":{"start":{"line":1503,"column":8},"end":{"line":1503,"column":22}},"425":{"start":{"line":1506,"column":6},"end":{"line":1506,"column":21}},"426":{"start":{"line":1518,"column":4},"end":{"line":1520,"column":15}},"427":{"start":{"line":1522,"column":4},"end":{"line":1522,"column":57}},"428":{"start":{"line":1523,"column":4},"end":{"line":1523,"column":47}},"429":{"start":{"line":1525,"column":4},"end":{"line":1525,"column":65}},"430":{"start":{"line":1527,"column":4},"end":{"line":1535,"column":5}},"431":{"start":{"line":1528,"column":6},"end":{"line":1532,"column":9}},"432":{"start":{"line":1529,"column":8},"end":{"line":1529,"column":29}},"433":{"start":{"line":1531,"column":8},"end":{"line":1531,"column":22}},"434":{"start":{"line":1534,"column":6},"end":{"line":1534,"column":21}},"435":{"start":{"line":1546,"column":4},"end":{"line":1548,"column":15}},"436":{"start":{"line":1550,"column":4},"end":{"line":1550,"column":57}},"437":{"start":{"line":1551,"column":4},"end":{"line":1551,"column":47}},"438":{"start":{"line":1553,"column":4},"end":{"line":1553,"column":65}},"439":{"start":{"line":1555,"column":4},"end":{"line":1563,"column":5}},"440":{"start":{"line":1556,"column":6},"end":{"line":1560,"column":9}},"441":{"start":{"line":1557,"column":8},"end":{"line":1557,"column":29}},"442":{"start":{"line":1559,"column":8},"end":{"line":1559,"column":22}},"443":{"start":{"line":1562,"column":6},"end":{"line":1562,"column":21}},"444":{"start":{"line":1575,"column":4},"end":{"line":1581,"column":15}},"445":{"start":{"line":1583,"column":4},"end":{"line":1583,"column":57}},"446":{"start":{"line":1585,"column":4},"end":{"line":1585,"column":65}},"447":{"start":{"line":1587,"column":4},"end":{"line":1595,"column":5}},"448":{"start":{"line":1588,"column":6},"end":{"line":1592,"column":9}},"449":{"start":{"line":1589,"column":8},"end":{"line":1589,"column":29}},"450":{"start":{"line":1591,"column":8},"end":{"line":1591,"column":22}},"451":{"start":{"line":1594,"column":6},"end":{"line":1594,"column":21}},"452":{"start":{"line":1607,"column":4},"end":{"line":1613,"column":15}},"453":{"start":{"line":1615,"column":4},"end":{"line":1615,"column":57}},"454":{"start":{"line":1617,"column":4},"end":{"line":1617,"column":65}},"455":{"start":{"line":1619,"column":4},"end":{"line":1627,"column":5}},"456":{"start":{"line":1620,"column":6},"end":{"line":1624,"column":9}},"457":{"start":{"line":1621,"column":8},"end":{"line":1621,"column":29}},"458":{"start":{"line":1623,"column":8},"end":{"line":1623,"column":22}},"459":{"start":{"line":1626,"column":6},"end":{"line":1626,"column":21}},"460":{"start":{"line":1639,"column":4},"end":{"line":1645,"column":15}},"461":{"start":{"line":1647,"column":4},"end":{"line":1647,"column":57}},"462":{"start":{"line":1649,"column":4},"end":{"line":1649,"column":65}},"463":{"start":{"line":1651,"column":4},"end":{"line":1659,"column":5}},"464":{"start":{"line":1652,"column":6},"end":{"line":1656,"column":9}},"465":{"start":{"line":1653,"column":8},"end":{"line":1653,"column":29}},"466":{"start":{"line":1655,"column":8},"end":{"line":1655,"column":22}},"467":{"start":{"line":1658,"column":6},"end":{"line":1658,"column":21}},"468":{"start":{"line":1671,"column":4},"end":{"line":1677,"column":15}},"469":{"start":{"line":1679,"column":4},"end":{"line":1679,"column":57}},"470":{"start":{"line":1681,"column":4},"end":{"line":1681,"column":65}},"471":{"start":{"line":1683,"column":4},"end":{"line":1691,"column":5}},"472":{"start":{"line":1684,"column":6},"end":{"line":1688,"column":9}},"473":{"start":{"line":1685,"column":8},"end":{"line":1685,"column":29}},"474":{"start":{"line":1687,"column":8},"end":{"line":1687,"column":22}},"475":{"start":{"line":1690,"column":6},"end":{"line":1690,"column":21}},"476":{"start":{"line":1705,"column":4},"end":{"line":1711,"column":15}},"477":{"start":{"line":1713,"column":4},"end":{"line":1713,"column":57}},"478":{"start":{"line":1715,"column":4},"end":{"line":1715,"column":65}},"479":{"start":{"line":1717,"column":4},"end":{"line":1725,"column":5}},"480":{"start":{"line":1718,"column":6},"end":{"line":1722,"column":9}},"481":{"start":{"line":1719,"column":8},"end":{"line":1719,"column":29}},"482":{"start":{"line":1721,"column":8},"end":{"line":1721,"column":22}},"483":{"start":{"line":1724,"column":6},"end":{"line":1724,"column":21}},"484":{"start":{"line":1736,"column":4},"end":{"line":1742,"column":15}},"485":{"start":{"line":1744,"column":4},"end":{"line":1744,"column":57}},"486":{"start":{"line":1745,"column":4},"end":{"line":1745,"column":47}},"487":{"start":{"line":1747,"column":4},"end":{"line":1747,"column":65}},"488":{"start":{"line":1749,"column":4},"end":{"line":1757,"column":5}},"489":{"start":{"line":1750,"column":6},"end":{"line":1754,"column":9}},"490":{"start":{"line":1751,"column":8},"end":{"line":1751,"column":29}},"491":{"start":{"line":1753,"column":8},"end":{"line":1753,"column":22}},"492":{"start":{"line":1756,"column":6},"end":{"line":1756,"column":21}},"493":{"start":{"line":1770,"column":4},"end":{"line":1775,"column":15}},"494":{"start":{"line":1777,"column":4},"end":{"line":1777,"column":57}},"495":{"start":{"line":1779,"column":4},"end":{"line":1779,"column":65}},"496":{"start":{"line":1781,"column":4},"end":{"line":1789,"column":5}},"497":{"start":{"line":1782,"column":6},"end":{"line":1786,"column":9}},"498":{"start":{"line":1783,"column":8},"end":{"line":1783,"column":29}},"499":{"start":{"line":1785,"column":8},"end":{"line":1785,"column":22}},"500":{"start":{"line":1788,"column":6},"end":{"line":1788,"column":21}},"501":{"start":{"line":1803,"column":4},"end":{"line":1809,"column":15}},"502":{"start":{"line":1811,"column":4},"end":{"line":1811,"column":57}},"503":{"start":{"line":1813,"column":4},"end":{"line":1813,"column":65}},"504":{"start":{"line":1815,"column":4},"end":{"line":1823,"column":5}},"505":{"start":{"line":1816,"column":6},"end":{"line":1820,"column":9}},"506":{"start":{"line":1817,"column":8},"end":{"line":1817,"column":29}},"507":{"start":{"line":1819,"column":8},"end":{"line":1819,"column":22}},"508":{"start":{"line":1822,"column":6},"end":{"line":1822,"column":21}},"509":{"start":{"line":1834,"column":4},"end":{"line":1838,"column":15}},"510":{"start":{"line":1840,"column":4},"end":{"line":1840,"column":57}},"511":{"start":{"line":1842,"column":4},"end":{"line":1842,"column":65}},"512":{"start":{"line":1844,"column":4},"end":{"line":1852,"column":5}},"513":{"start":{"line":1845,"column":6},"end":{"line":1849,"column":9}},"514":{"start":{"line":1846,"column":8},"end":{"line":1846,"column":29}},"515":{"start":{"line":1848,"column":8},"end":{"line":1848,"column":22}},"516":{"start":{"line":1851,"column":6},"end":{"line":1851,"column":21}},"517":{"start":{"line":1863,"column":4},"end":{"line":1867,"column":15}},"518":{"start":{"line":1869,"column":4},"end":{"line":1869,"column":57}},"519":{"start":{"line":1871,"column":4},"end":{"line":1871,"column":65}},"520":{"start":{"line":1873,"column":4},"end":{"line":1881,"column":5}},"521":{"start":{"line":1874,"column":6},"end":{"line":1878,"column":9}},"522":{"start":{"line":1875,"column":8},"end":{"line":1875,"column":29}},"523":{"start":{"line":1877,"column":8},"end":{"line":1877,"column":22}},"524":{"start":{"line":1880,"column":6},"end":{"line":1880,"column":21}},"525":{"start":{"line":1892,"column":4},"end":{"line":1895,"column":15}},"526":{"start":{"line":1897,"column":4},"end":{"line":1897,"column":57}},"527":{"start":{"line":1899,"column":4},"end":{"line":1899,"column":65}},"528":{"start":{"line":1901,"column":4},"end":{"line":1909,"column":5}},"529":{"start":{"line":1902,"column":6},"end":{"line":1906,"column":9}},"530":{"start":{"line":1903,"column":8},"end":{"line":1903,"column":29}},"531":{"start":{"line":1905,"column":8},"end":{"line":1905,"column":22}},"532":{"start":{"line":1908,"column":6},"end":{"line":1908,"column":21}},"533":{"start":{"line":1921,"column":4},"end":{"line":1924,"column":15}},"534":{"start":{"line":1926,"column":4},"end":{"line":1926,"column":57}},"535":{"start":{"line":1928,"column":4},"end":{"line":1928,"column":65}},"536":{"start":{"line":1930,"column":4},"end":{"line":1938,"column":5}},"537":{"start":{"line":1931,"column":6},"end":{"line":1935,"column":9}},"538":{"start":{"line":1932,"column":8},"end":{"line":1932,"column":29}},"539":{"start":{"line":1934,"column":8},"end":{"line":1934,"column":22}},"540":{"start":{"line":1937,"column":6},"end":{"line":1937,"column":21}},"541":{"start":{"line":1950,"column":4},"end":{"line":1953,"column":15}},"542":{"start":{"line":1955,"column":4},"end":{"line":1955,"column":57}},"543":{"start":{"line":1957,"column":4},"end":{"line":1957,"column":65}},"544":{"start":{"line":1959,"column":4},"end":{"line":1967,"column":5}},"545":{"start":{"line":1960,"column":6},"end":{"line":1964,"column":9}},"546":{"start":{"line":1961,"column":8},"end":{"line":1961,"column":29}},"547":{"start":{"line":1963,"column":8},"end":{"line":1963,"column":22}},"548":{"start":{"line":1966,"column":6},"end":{"line":1966,"column":21}},"549":{"start":{"line":1971,"column":0},"end":{"line":1977,"column":2}},"550":{"start":{"line":1972,"column":2},"end":{"line":1976,"column":3}},"551":{"start":{"line":1973,"column":4},"end":{"line":1975,"column":5}},"552":{"start":{"line":1974,"column":6},"end":{"line":1974,"column":37}},"553":{"start":{"line":1979,"column":0},"end":{"line":1979,"column":31}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":22},"end":{"line":8,"column":33}},{"start":{"line":8,"column":37},"end":{"line":8,"column":39}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":6}},{"start":{"line":27,"column":6},"end":{"line":27,"column":6}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"8":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"9":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":24},"end":{"line":131,"column":41}},{"start":{"line":131,"column":45},"end":{"line":131,"column":47}}]},"10":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"11":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"12":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"13":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"14":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"15":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"16":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"17":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"18":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"19":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"20":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"21":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"22":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"23":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":326,"column":4}},{"start":{"line":326,"column":4},"end":{"line":326,"column":4}}]},"24":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"25":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"26":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"27":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":4},"end":{"line":509,"column":4}},{"start":{"line":509,"column":4},"end":{"line":509,"column":4}}]},"28":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":4},"end":{"line":540,"column":4}},{"start":{"line":540,"column":4},"end":{"line":540,"column":4}}]},"29":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":4},"end":{"line":573,"column":4}},{"start":{"line":573,"column":4},"end":{"line":573,"column":4}}]},"30":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":4},"end":{"line":601,"column":4}},{"start":{"line":601,"column":4},"end":{"line":601,"column":4}}]},"31":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":4},"end":{"line":630,"column":4}},{"start":{"line":630,"column":4},"end":{"line":630,"column":4}}]},"32":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":4},"end":{"line":659,"column":4}},{"start":{"line":659,"column":4},"end":{"line":659,"column":4}}]},"33":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":4},"end":{"line":683,"column":4}},{"start":{"line":683,"column":4},"end":{"line":683,"column":4}}]},"34":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"35":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":4},"end":{"line":729,"column":4}},{"start":{"line":729,"column":4},"end":{"line":729,"column":4}}]},"36":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":4},"end":{"line":760,"column":4}},{"start":{"line":760,"column":4},"end":{"line":760,"column":4}}]},"37":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":4},"end":{"line":784,"column":4}},{"start":{"line":784,"column":4},"end":{"line":784,"column":4}}]},"38":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":4},"end":{"line":791,"column":4}},{"start":{"line":791,"column":4},"end":{"line":791,"column":4}}]},"39":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":4},"end":{"line":807,"column":4}},{"start":{"line":807,"column":4},"end":{"line":807,"column":4}}]},"40":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":4},"end":{"line":838,"column":4}},{"start":{"line":838,"column":4},"end":{"line":838,"column":4}}]},"41":{"line":868,"type":"if","locations":[{"start":{"line":868,"column":4},"end":{"line":868,"column":4}},{"start":{"line":868,"column":4},"end":{"line":868,"column":4}}]},"42":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":4},"end":{"line":900,"column":4}},{"start":{"line":900,"column":4},"end":{"line":900,"column":4}}]},"43":{"line":925,"type":"if","locations":[{"start":{"line":925,"column":4},"end":{"line":925,"column":4}},{"start":{"line":925,"column":4},"end":{"line":925,"column":4}}]},"44":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":4},"end":{"line":943,"column":4}},{"start":{"line":943,"column":4},"end":{"line":943,"column":4}}]},"45":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":4},"end":{"line":979,"column":4}},{"start":{"line":979,"column":4},"end":{"line":979,"column":4}}]},"46":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":4},"end":{"line":1014,"column":4}},{"start":{"line":1014,"column":4},"end":{"line":1014,"column":4}}]},"47":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}},{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}}]},"48":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":4},"end":{"line":1084,"column":4}},{"start":{"line":1084,"column":4},"end":{"line":1084,"column":4}}]},"49":{"line":1113,"type":"if","locations":[{"start":{"line":1113,"column":4},"end":{"line":1113,"column":4}},{"start":{"line":1113,"column":4},"end":{"line":1113,"column":4}}]},"50":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":4},"end":{"line":1142,"column":4}},{"start":{"line":1142,"column":4},"end":{"line":1142,"column":4}}]},"51":{"line":1174,"type":"if","locations":[{"start":{"line":1174,"column":4},"end":{"line":1174,"column":4}},{"start":{"line":1174,"column":4},"end":{"line":1174,"column":4}}]},"52":{"line":1201,"type":"if","locations":[{"start":{"line":1201,"column":6},"end":{"line":1201,"column":6}},{"start":{"line":1201,"column":6},"end":{"line":1201,"column":6}}]},"53":{"line":1202,"type":"if","locations":[{"start":{"line":1202,"column":8},"end":{"line":1202,"column":8}},{"start":{"line":1202,"column":8},"end":{"line":1202,"column":8}}]},"54":{"line":1202,"type":"binary-expr","locations":[{"start":{"line":1202,"column":12},"end":{"line":1202,"column":53}},{"start":{"line":1203,"column":10},"end":{"line":1203,"column":78}}]},"55":{"line":1216,"type":"if","locations":[{"start":{"line":1216,"column":4},"end":{"line":1216,"column":4}},{"start":{"line":1216,"column":4},"end":{"line":1216,"column":4}}]},"56":{"line":1244,"type":"if","locations":[{"start":{"line":1244,"column":4},"end":{"line":1244,"column":4}},{"start":{"line":1244,"column":4},"end":{"line":1244,"column":4}}]},"57":{"line":1293,"type":"if","locations":[{"start":{"line":1293,"column":4},"end":{"line":1293,"column":4}},{"start":{"line":1293,"column":4},"end":{"line":1293,"column":4}}]},"58":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":4},"end":{"line":1325,"column":4}},{"start":{"line":1325,"column":4},"end":{"line":1325,"column":4}}]},"59":{"line":1354,"type":"if","locations":[{"start":{"line":1354,"column":4},"end":{"line":1354,"column":4}},{"start":{"line":1354,"column":4},"end":{"line":1354,"column":4}}]},"60":{"line":1382,"type":"if","locations":[{"start":{"line":1382,"column":4},"end":{"line":1382,"column":4}},{"start":{"line":1382,"column":4},"end":{"line":1382,"column":4}}]},"61":{"line":1411,"type":"if","locations":[{"start":{"line":1411,"column":4},"end":{"line":1411,"column":4}},{"start":{"line":1411,"column":4},"end":{"line":1411,"column":4}}]},"62":{"line":1439,"type":"if","locations":[{"start":{"line":1439,"column":4},"end":{"line":1439,"column":4}},{"start":{"line":1439,"column":4},"end":{"line":1439,"column":4}}]},"63":{"line":1467,"type":"if","locations":[{"start":{"line":1467,"column":4},"end":{"line":1467,"column":4}},{"start":{"line":1467,"column":4},"end":{"line":1467,"column":4}}]},"64":{"line":1499,"type":"if","locations":[{"start":{"line":1499,"column":4},"end":{"line":1499,"column":4}},{"start":{"line":1499,"column":4},"end":{"line":1499,"column":4}}]},"65":{"line":1527,"type":"if","locations":[{"start":{"line":1527,"column":4},"end":{"line":1527,"column":4}},{"start":{"line":1527,"column":4},"end":{"line":1527,"column":4}}]},"66":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":4},"end":{"line":1555,"column":4}},{"start":{"line":1555,"column":4},"end":{"line":1555,"column":4}}]},"67":{"line":1587,"type":"if","locations":[{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}},{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}}]},"68":{"line":1619,"type":"if","locations":[{"start":{"line":1619,"column":4},"end":{"line":1619,"column":4}},{"start":{"line":1619,"column":4},"end":{"line":1619,"column":4}}]},"69":{"line":1651,"type":"if","locations":[{"start":{"line":1651,"column":4},"end":{"line":1651,"column":4}},{"start":{"line":1651,"column":4},"end":{"line":1651,"column":4}}]},"70":{"line":1683,"type":"if","locations":[{"start":{"line":1683,"column":4},"end":{"line":1683,"column":4}},{"start":{"line":1683,"column":4},"end":{"line":1683,"column":4}}]},"71":{"line":1717,"type":"if","locations":[{"start":{"line":1717,"column":4},"end":{"line":1717,"column":4}},{"start":{"line":1717,"column":4},"end":{"line":1717,"column":4}}]},"72":{"line":1749,"type":"if","locations":[{"start":{"line":1749,"column":4},"end":{"line":1749,"column":4}},{"start":{"line":1749,"column":4},"end":{"line":1749,"column":4}}]},"73":{"line":1781,"type":"if","locations":[{"start":{"line":1781,"column":4},"end":{"line":1781,"column":4}},{"start":{"line":1781,"column":4},"end":{"line":1781,"column":4}}]},"74":{"line":1815,"type":"if","locations":[{"start":{"line":1815,"column":4},"end":{"line":1815,"column":4}},{"start":{"line":1815,"column":4},"end":{"line":1815,"column":4}}]},"75":{"line":1844,"type":"if","locations":[{"start":{"line":1844,"column":4},"end":{"line":1844,"column":4}},{"start":{"line":1844,"column":4},"end":{"line":1844,"column":4}}]},"76":{"line":1873,"type":"if","locations":[{"start":{"line":1873,"column":4},"end":{"line":1873,"column":4}},{"start":{"line":1873,"column":4},"end":{"line":1873,"column":4}}]},"77":{"line":1901,"type":"if","locations":[{"start":{"line":1901,"column":4},"end":{"line":1901,"column":4}},{"start":{"line":1901,"column":4},"end":{"line":1901,"column":4}}]},"78":{"line":1930,"type":"if","locations":[{"start":{"line":1930,"column":4},"end":{"line":1930,"column":4}},{"start":{"line":1930,"column":4},"end":{"line":1930,"column":4}}]},"79":{"line":1959,"type":"if","locations":[{"start":{"line":1959,"column":4},"end":{"line":1959,"column":4}},{"start":{"line":1959,"column":4},"end":{"line":1959,"column":4}}]},"80":{"line":1973,"type":"if","locations":[{"start":{"line":1973,"column":4},"end":{"line":1973,"column":4}},{"start":{"line":1973,"column":4},"end":{"line":1973,"column":4}}]}},"code":["'use strict';","","var AuthenticationRequest = require('./authentication-request'),","    WebApiRequest = require('./webapi-request'),","    HttpManager = require('./http-manager');","","function SpotifyWebApi(credentials) {","  this._credentials = credentials || {};","}","","SpotifyWebApi.prototype = {","  _addBodyParameters: function(request, options) {","    if (options) {","      for (var key in options) {","        if (key !== 'credentials') {","          request.addBodyParameter(key, options[key]);","        }","      }","    }","  },","","  _addQueryParameters: function(request, options) {","    if (!options) {","      return;","    }","    for (var key in options) {","      if (key !== 'credentials') {","        request.addQueryParameter(key, options[key]);","      }","    }","  },","","  _performRequest: function(method, request) {","    var promiseFunction = function(resolve, reject) {","      method(request, function(error, result) {","        if (error) {","          reject(error);","        } else {","          resolve(result);","        }","      });","    };","    return new Promise(promiseFunction);","  },","","  _addAccessToken: function(request, accessToken) {","    if (accessToken) {","      request.addHeaders({","        'Authorization' : 'Bearer ' + accessToken","      });","    }","  },","","  setCredentials: function(credentials) {","    for (var key in credentials) {","      if (credentials.hasOwnProperty(key)) {","        this._credentials[key] = credentials[key];","      }","    }","  },","","  getCredentials: function() {","    return this._credentials;","  },","","  resetCredentials: function() {","    this._credentials = null;","  },","","  setClientId: function(clientId) {","    this._setCredential('clientId', clientId);","  },","","  setClientSecret: function(clientSecret) {","    this._setCredential('clientSecret', clientSecret);","  },","","  setAccessToken: function(accessToken) {","    this._setCredential('accessToken', accessToken);","  },","","  setRefreshToken: function(refreshToken) {","    this._setCredential('refreshToken', refreshToken);","  },","","  setRedirectURI: function(redirectUri) {","    this._setCredential('redirectUri', redirectUri);","  },","","  getRedirectURI: function() {","    return this._getCredential('redirectUri');","  },","","  getClientId: function() {","    return this._getCredential('clientId');","  },","","  getClientSecret: function() {","    return this._getCredential('clientSecret');","  },","","  getAccessToken: function() {","    return this._getCredential('accessToken');","  },","","  getRefreshToken: function() {","    return this._getCredential('refreshToken');","  },","","  resetClientId: function() {","    this._resetCredential('clientId');","  },","","  resetClientSecret: function() {","    this._resetCredential('clientSecret');","  },","","  resetAccessToken: function() {","    this._resetCredential('accessToken');","  },","","  resetRefreshToken: function() {","    this._resetCredential('refreshToken');","  },","","  resetRedirectURI: function() {","    this._resetCredential('redirectUri');","  },","","  _setCredential: function(credentialKey, value) {","    this._credentials = this._credentials || {};","    this._credentials[credentialKey] = value;","  },","","  _getCredential: function(credentialKey) {","    if (!this._credentials) {","      return;","    } else {","      return this._credentials[credentialKey];","    }","  },","","  _resetCredential: function(credentialKey) {","    if (!this._credentials) {","      return;","    } else {","      this._credentials[credentialKey] = null;","    }","  },","","  /**","   * Look up a track.","   * @param {string} trackId The track's ID.","   * @param {Object} [options] The possible options, currently only market.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getTrack('3Qm86XLflmIXVm1wcwkgDK').then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing information","   *          about the track. Not returned if a callback is given.","   */","  getTrack: function(trackId, options, callback) {","     // In case someone is using a version where options parameter did not exist.","    var actualCallback;","    if (typeof options === 'function') {","      actualCallback = options;","    } else {","      actualCallback = callback;","    }","","    var actualOptions = {};","    if (typeof options === 'object') {","      Object.keys(options).forEach(function(key) {","        actualOptions[key] = options[key];","      });","    }","","    var request = WebApiRequest.builder()","      .withPath('/v1/tracks/' + trackId)","      .withQueryParameters(actualOptions)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (actualCallback) {","      promise.then(function(data) {","        actualCallback(null, data);","      }, function(err) {","        actualCallback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Look up several tracks.","   * @param {string[]} trackIds The IDs of the artists.","   * @param {Object} [options] The possible options, currently only market.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getArtists(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing information","   *          about the artists. Not returned if a callback is given.","   */","  getTracks: function(trackIds, options, callback) {","    // In case someone is using a version where options parameter did not exist.","    var actualCallback;","    if (typeof options === 'function') {","      actualCallback = options;","    } else {","      actualCallback = callback;","    }","","    var actualOptions = {};","    if (typeof options === 'object') {","      Object.keys(options).forEach(function(key) {","        actualOptions[key] = options[key];","      });","    }","","    var request = WebApiRequest.builder()","      .withPath('/v1/tracks')","      .withQueryParameters({","        'ids' : trackIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, actualOptions);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (actualCallback) {","      promise.then(function(data) {","        actualCallback(null, data);","      }, function(err) {","        actualCallback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Look up an album.","   * @param {string} albumId The album's ID.","   * @param {Object} [options] The possible options, currently only market.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAlbum('0sNOF9WDwhWunNAHPD3Baj').then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing information","   *          about the album. Not returned if a callback is given.","   */","  getAlbum: function(albumId, options, callback) {","    // In case someone is using a version where options parameter did not exist.","    var actualCallback;","    if (typeof options === 'function') {","      actualCallback = options;","    } else {","      actualCallback = callback;","    }","","    var actualOptions = {};","    if (typeof options === 'object') {","      Object.keys(options).forEach(function(key) {","        actualOptions[key] = options[key];","      });","    }","","    var request = WebApiRequest.builder()","      .withPath('/v1/albums/' + albumId)","      .withQueryParameters(actualOptions)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (actualCallback) {","      promise.then(function(data) {","        actualCallback(null, data);","      }, function(err) {","        actualCallback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Look up several albums.","   * @param {string[]} albumIds The IDs of the albums.","   * @param {Object} [options] The possible options, currently only market.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAlbums(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing information","   *          about the albums. Not returned if a callback is given.","   */","  getAlbums: function(albumIds, options, callback) {","    // In case someone is using a version where options parameter did not exist.","    var actualCallback;","    if (typeof options === 'function') {","      actualCallback = options;","    } else {","      actualCallback = callback;","    }","","    var actualOptions = {};","    if (typeof options === 'object') {","      Object.keys(options).forEach(function(key) {","        actualOptions[key] = options[key];","      });","    }","","    var request = WebApiRequest.builder()","      .withPath('/v1/albums')","      .withQueryParameters({","        'ids' : albumIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, actualOptions);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (actualCallback) {","      promise.then(function(data) {","        actualCallback(null, data);","      }, function(err) {","        actualCallback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Look up an artist.","   * @param {string} artistId The artist's ID.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example api.getArtist('1u7kkVrr14iBvrpYnZILJR').then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing information","   *          about the artist. Not returned if a callback is given.","   */","  getArtist: function(artistId, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/artists/' + artistId)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Look up several artists.","   * @param {string[]} artistIds The IDs of the artists.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getArtists(['0oSGxfWSnnOXhD2fKuz2Gy', '3dBVyJ7JuOMt4GE9607Qin']).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing information","   *          about the artists. Not returned if a callback is given.","   */","  getArtists: function(artistIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/artists')","      .withQueryParameters({","        'ids' : artistIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Search for music entities of certain types.","   * @param {string} query The search query.","   * @param {string[]} types An array of item types to search across.","   * Valid types are: 'album', 'artist', 'playlist', and 'track'.","   * @param {Object} [options] The possible options, e.g. limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example search('Abba', ['track', 'playlist'], { limit : 5, offset : 1 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          search results. The result is paginated. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  search: function(query, types, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/search/')","      .withQueryParameters({","        type : types.join(','),","        q : query","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Search for an album.","   * @param {string} query The search query.","   * @param {Object} [options] The possible options, e.g. limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example searchAlbums('Space Oddity', { limit : 5, offset : 1 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          search results. The result is paginated. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  searchAlbums: function(query, options, callback) {","    return this.search(query, ['album'], options, callback);","  },","","  /**","   * Search for an artist.","   * @param {string} query The search query.","   * @param {Object} [options] The possible options, e.g. limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example searchArtists('David Bowie', { limit : 5, offset : 1 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          search results. The result is paginated. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  searchArtists: function(query, options, callback) {","    return this.search(query, ['artist'], options, callback);","  },","","  /**","   * Search for a track.","   * @param {string} query The search query.","   * @param {Object} [options] The possible options, e.g. limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example searchTracks('Mr. Brightside', { limit : 3, offset : 2 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          search results. The result is paginated. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  searchTracks: function(query, options, callback) {","    return this.search(query, ['track'], options, callback);","  },","","  /**","   * Search for playlists.","   * @param {string} query The search query.","   * @param {Object} options The possible options.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example searchPlaylists('workout', { limit : 1, offset : 0 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          search results. The result is paginated. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  searchPlaylists: function(query, options, callback) {","    return this.search(query, ['playlist'], options, callback);","  },","","  /**","   * Get an artist's albums.","   * @param {string} artistId The artist's ID.","   * @options {Object} [options] The possible options, e.g. limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getArtistAlbums('0oSGxfWSnnOXhD2fKuz2Gy', { album_type : 'album', country : 'GB', limit : 2, offset : 5 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the albums","   *          for the given artist. The result is paginated. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  getArtistAlbums: function(artistId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/artists/' + artistId + '/albums')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get the tracks of an album.","   * @param albumId the album's ID.","   * @options {Object} [options] The possible options, e.g. limit.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAlbumTracks('41MnTivkwTO3UUJ8DrqEJJ', { limit : 5, offset : 1 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *                    tracks in the album. The result is paginated. If the promise is rejected.","   *                    it contains an error object. Not returned if a callback is given.","   */","  getAlbumTracks: function(albumId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/albums/' + albumId + '/tracks')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get an artist's top tracks.","   * @param {string} artistId The artist's ID.","   * @param {string} country The country/territory where the tracks are most popular. (format: ISO 3166-1 alpha-2)","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getArtistTopTracks('0oSGxfWSnnOXhD2fKuz2Gy', 'GB').then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          artist's top tracks in the given country. If the promise is rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  getArtistTopTracks: function(artistId, country, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/artists/' + artistId + '/top-tracks')","      .withQueryParameters({","        'country' : country","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get related artists.","   * @param {string} artistId The artist's ID.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getArtistRelatedArtists('0oSGxfWSnnOXhD2fKuz2Gy').then(...)","   * @returns {Promise|undefined} A promise that if successful, returns an object containing the","   *          related artists. If the promise is rejected, it contains an error object. Not returned if a callback is given.","   */","  getArtistRelatedArtists: function(artistId, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/artists/' + artistId + '/related-artists')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get information about a user.","   * @param userId The user ID.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getUser('thelinmichael').then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object","   *          containing information about the user. If the promise is","   *          rejected, it contains an error object. Not returned if a callback is given.","   */","  getUser: function(userId, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId))","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get information about the user that has signed in (the current user).","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getMe().then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object","   *          containing information about the user. The amount of information","   *          depends on the permissions given by the user. If the promise is","   *          rejected, it contains an error object. Not returned if a callback is given.","   */","  getMe: function(callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get a user's playlists.","   * @param {string} userId An optional id of the user. If you know the Spotify URI it is easy","   * to find the id (e.g. spotify:user:<here_is_the_id>). If not provided, the id of the user that granted","   * the permissions will be used.","   * @param {Object} [options] The options supplied to this request.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getUserPlaylists('thelinmichael').then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing","   *          a list of playlists. If rejected, it contains an error object. Not returned if a callback is given.","   */","  getUserPlaylists: function(userId, options, callback) {","    var path;","    if (typeof userId === 'string') {","      path = '/v1/users/' + encodeURIComponent(userId) + '/playlists';","    } else {","      path = '/v1/me/playlists';","    }","","    var request = WebApiRequest.builder()","      .withPath(path)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get a playlist.","   * @param {string} userId The playlist's owner's user ID.","   * @param {string} playlistId The playlist's ID.","   * @param {Object} [options] The options supplied to this request.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getPlaylist('thelinmichael', '3EsfV6XzCHU8SPNdbnFogK').then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing","   *          the playlist. If rejected, it contains an error object. Not returned if a callback is given.","   */","  getPlaylist: function(userId, playlistId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get tracks in a playlist.","   * @param {string} userId THe playlist's owner's user ID.","   * @param {string} playlistId The playlist's ID.","   * @param {Object} [options] Optional options, such as fields.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getPlaylistTracks('thelinmichael', '3ktAYNcRHpazJ9qecm3ptn').then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object that containing","   * the tracks in the playlist. If rejected, it contains an error object. Not returned if a callback is given.","   */","  getPlaylistTracks: function(userId, playlistId, options, callback) {","    var request = WebApiRequest.builder().","      withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/tracks').","      withQueryParameters(options).","      build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Create a playlist.","   * @param {string} userId The playlist's owner's user ID.","   * @param {string} playlistName The name of the playlist.","   * @param {Object} [options] The possible options, currently only public.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example createPlaylist('thelinmichael', 'My cool playlist!', { public : false }).then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing information about the","   *          created playlist. If rejected, it contains an error object. Not returned if a callback is given.","   */","  createPlaylist: function(userId, playlistName, options, callback) {","    // In case someone is using a version where options parameter did not exist.","    var actualCallback;","    if (typeof options === 'function') {","      actualCallback = options;","    } else {","      actualCallback = callback;","    }","","    var actualOptions = { 'name' : playlistName };","    if (typeof options === 'object') {","      Object.keys(options).forEach(function(key) {","        actualOptions[key] = options[key];","      });","    }","","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withBodyParameters(actualOptions)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.post, request);","","    if (actualCallback) {","      promise.then(function(data) {","        actualCallback(null, data);","      }, function(err) {","        actualCallback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Follow a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {Object} [options] The possible options, currently only public.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  followPlaylist: function(userId, playlistId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/followers')","      .withBodyParameters(options)","      .withHeaders({ 'Content-Type' : 'application/json' })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Unfollow a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {Object} [options] The possible options, currently only public.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  unfollowPlaylist: function(userId, playlistId, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/followers')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Change playlist details.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {Object} [options] The possible options, e.g. name, public.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example changePlaylistDetails('thelinmichael', '3EsfV6XzCHU8SPNdbnFogK', {name: 'New name', public: true}).then(...)","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  changePlaylistDetails: function(userId, playlistId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId)","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withBodyParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Add tracks to a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {string[]} tracks URIs of the tracks to add to the playlist.","   * @param {Object} [options] Options, position being the only one.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example addTracksToPlaylist('thelinmichael', '3EsfV6XzCHU8SPNdbnFogK',","              '[\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\", \"spotify:track:1301WleyT98MSxVHPZCA6M\"]').then(...)","   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  addTracksToPlaylist: function(userId, playlistId, tracks, options, callback) {","    var tracksString;","    if (typeof tracks === 'object') {","      tracksString = tracks.join();","    } else {","      tracksString = tracks;","    }","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/tracks')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withQueryParameters({","        uris: tracksString","      })","      .build();","","    this._addQueryParameters(request, options);","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.post, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Remove tracks from a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {Object[]} tracks An array of objects containing a property called uri with the track URI (String), and","   * a an optional property called positions (int[]), e.g. { uri : \"spotify:track:491rM2JN8KvmV6p0oDDuJT\", positions : [0, 15] }","   * @param {Object} options Options, snapshot_id being the only one.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  removeTracksFromPlaylist: function(userId, playlistId, tracks, options, callback) {","    var request = WebApiRequest.builder().","      withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/tracks').","      withHeaders({ 'Content-Type' : 'application/json' }).","      withBodyParameters({","        'tracks': tracks","      }).","      build();","","    this._addBodyParameters(request, options);","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Remove tracks from a playlist by position instead of specifying the tracks' URIs.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {int[]} positions The positions of the tracks in the playlist that should be removed","   * @param {string} snapshot_id The snapshot ID, or version, of the playlist. Required","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  removeTracksFromPlaylistByPosition: function(userId, playlistId, positions, snapshotId, callback) {","    var request = WebApiRequest.builder().","      withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/tracks').","      withHeaders({ 'Content-Type' : 'application/json' }).","      withBodyParameters({","        'positions': positions,","        'snapshot_id' : snapshotId","      }).","      build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Replace tracks in a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {Object[]} uris An array of track URIs (strings)","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns an empty object. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  replaceTracksInPlaylist: function(userId, playlistId, uris, callback) {","    var request = WebApiRequest.builder().","      withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/tracks').","      withHeaders({ 'Content-Type' : 'application/json' }).","      withBodyParameters({","        'uris': uris","      }).","      build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Reorder tracks in a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {int} rangeStart The position of the first track to be reordered.","   * @param {int} insertBefore The position where the tracks should be inserted.","   * @param {Object} options Optional parameters, i.e. range_length and snapshot_id.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns an object containing a snapshot_id. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  reorderTracksInPlaylist: function(userId, playlistId, rangeStart, insertBefore, options, callback) {","    var request = WebApiRequest.builder().","      withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/tracks').","      withHeaders({ 'Content-Type' : 'application/json' }).","      withBodyParameters({","        'range_start': rangeStart,","        'insert_before' : insertBefore","      }).","      build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addBodyParameters(request, options);","","    var promise =  this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get audio features for a single track identified by its unique Spotify ID.","   * @param {string} trackId The track ID","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAudioFeaturesForTrack('38P3Q4QcdjQALGF2Z92BmR').then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object","   *          containing information about the audio features. If the promise is","   *          rejected, it contains an error object. Not returned if a callback is given.","   */","  getAudioFeaturesForTrack: function(trackId, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/audio-features/' + trackId)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get audio analysis for a single track identified by its unique Spotify ID.","   * @param {string} trackId The track ID","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAudioAnalysisForTrack('38P3Q4QcdjQALGF2Z92BmR').then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object","   *          containing information about the audio analysis. If the promise is","   *          rejected, it contains an error object. Not returned if a callback is given.","   */","  getAudioAnalysisForTrack: function(trackId, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/audio-analysis/' + trackId)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get audio features for multiple tracks identified by their unique Spotify ID.","   * @param {string[]} trackIds The track IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAudioFeaturesForTracks(['38P3Q4QcdjQALGF2Z92BmR', '2HO2bnoMrpnZUbUqiilLHi']).then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object","   *          containing information about the audio features for the tracks. If the promise is","   *          rejected, it contains an error object. Not returned if a callback is given.","   */","  getAudioFeaturesForTracks: function(trackIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/audio-features')","      .withQueryParameters({","        'ids' : trackIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Create a playlist-style listening experience based on seed artists, tracks and genres.","   * @param {Object} [options] The options supplied to this request.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getRecommendations({ min_energy: 0.4, seed_artists: ['6mfK6Q2tzLMEchAr0e9Uzu', '4DYFVNKZ1uixa6SQTvzQwJ'], min_popularity: 50 }).then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing","   *          a list of tracks and a list of seeds. If rejected, it contains an error object. Not returned if a callback is given.","   */","  getRecommendations: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/recommendations')","      .build();","","    var _opts = {};","    var optionsOfTypeArray = ['seed_artists', 'seed_genres', 'seed_tracks'];","    for (var option in options) {","      if (options.hasOwnProperty(option)) {","        if (optionsOfTypeArray.indexOf(option) !== -1 &&","          Object.prototype.toString.call(options[option]) === '[object Array]') {","          _opts[option] = options[option].join(',');","        } else {","          _opts[option] = options[option];","        }","      }","    }","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, _opts);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve a list of available genres seed parameter values for recommendations.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example getAvailableGenreSeeds().then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing","   *          a list of available genres to be used as seeds for recommendations.","   *          If rejected, it contains an error object. Not returned if a callback is given.","   */","  getAvailableGenreSeeds: function(callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/recommendations/available-genre-seeds')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve a URL where the user can give the application permissions.","   * @param {string[]} scopes The scopes corresponding to the permissions the application needs.","   * @param {string} state A parameter that you can use to maintain a value between the request and the callback to redirect_uri.It is useful to prevent CSRF exploits.","   * @returns {string} The URL where the user can give application permissions.","   */","  createAuthorizeURL: function(scopes, state) {","    var request = AuthenticationRequest.builder()","      .withPath('/authorize')","      .withQueryParameters({","        'client_id' : this.getClientId(),","        'response_type' : 'code',","        'redirect_uri' : this.getRedirectURI(),","        'scope' : scopes.join('%20'),","        'state' : state","      })","      .build();","","    return request.getURL();","  },","","  /**","   * Retrieve the tracks that are saved to the authenticated users Your Music library.","   * @param {Object} [options] Options, being market, limit, and/or offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which in turn contains","   *          playlist track objects. Not returned if a callback is given.","   */","  getMySavedTracks: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/tracks')","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Check if one or more tracks is already saved in the current Spotify user’s “Your Music” library.","   * @param {string[]} trackIds The track IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order","   * of the returned array's elements correspond to the track ID in the request.","   * The boolean value of true indicates that the track is part of the user's library, otherwise false.","   * Not returned if a callback is given.","   */","  containsMySavedTracks: function(trackIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/tracks/contains')","      .withQueryParameters({","        'ids' : trackIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Remove a track from the authenticated user's Your Music library.","   * @param {string[]} trackIds The track IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error.","   * Not returned if a callback is given.","   */","  removeFromMySavedTracks: function(trackIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/tracks')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withBodyParameters(trackIds)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","   /**","   * Add a track from the authenticated user's Your Music library.","   * @param {string[]} trackIds The track IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error. Not returned if a callback is given.","   */","  addToMySavedTracks: function(trackIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/tracks')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withBodyParameters(trackIds)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Remove an album from the authenticated user's Your Music library.","   * @param {string[]} albumIds The album IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error.","   * Not returned if a callback is given.","   */","  removeFromMySavedAlbums: function(albumIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/albums')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withBodyParameters(albumIds)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Add an album from the authenticated user's Your Music library.","   * @param {string[]} albumIds The track IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns null, otherwise an error. Not returned if a callback is given.","   */","  addToMySavedAlbums: function(albumIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/albums')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withBodyParameters(albumIds)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve the albums that are saved to the authenticated users Your Music library.","   * @param {Object} [options] Options, being market, limit, and/or offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which in turn contains","   *          playlist album objects. Not returned if a callback is given.","   */","  getMySavedAlbums: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/albums')","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Check if one or more albums is already saved in the current Spotify user’s “Your Music” library.","   * @param {string[]} albumIds The album IDs","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order","   * of the returned array's elements correspond to the album ID in the request.","   * The boolean value of true indicates that the album is part of the user's library, otherwise false.","   * Not returned if a callback is given.","   */","  containsMySavedAlbums: function(albumIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/albums/contains')","      .withQueryParameters({","        'ids' : albumIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get the current user's top artists based on calculated affinity.","   * @param {Object} [options] Options, being time_range, limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of artists,","   *          otherwise an error. Not returned if a callback is given.","   */","  getMyTopArtists: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/top/artists')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get the current user's top tracks based on calculated affinity.","   * @param {Object} [options] Options, being time_range, limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves into a paging object of tracks,","   *          otherwise an error. Not returned if a callback is given.","   */","  getMyTopTracks: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/top/tracks')","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Add the current user as a follower of one or more other Spotify users.","   * @param {string[]} userIds The IDs of the users to be followed.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example followUsers(['thelinmichael', 'wizzler']).then(...)","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  followUsers: function(userIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following')","      .withQueryParameters({","        ids: userIds.join(','),","        type: 'user'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Add the current user as a follower of one or more artists.","   * @param {string[]} artistIds The IDs of the artists to be followed.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example followArtists(['0LcJLqbBmaGUft1e9Mm8HV', '3gqv1kgivAc92KnUm4elKv']).then(...)","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  followArtists: function(artistIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following')","      .withQueryParameters({","        ids: artistIds.join(','),","        type: 'artist'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.put, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Remove the current user as a follower of one or more other Spotify users.","   * @param {string[]} userIds The IDs of the users to be unfollowed.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example unfollowUsers(['thelinmichael', 'wizzler']).then(...)","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  unfollowUsers: function(userIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following')","      .withQueryParameters({","        ids: userIds.join(','),","        type: 'user'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Remove the current user as a follower of one or more artists.","   * @param {string[]} artistIds The IDs of the artists to be unfollowed.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example unfollowArtists(['0LcJLqbBmaGUft1e9Mm8HV', '3gqv1kgivAc92KnUm4elKv']).then(...)","   * @returns {Promise|undefined} A promise that if successful, simply resolves to an empty object. If rejected,","   *          it contains an error object. Not returned if a callback is given.","   */","  unfollowArtists: function(artistIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following')","      .withQueryParameters({","        ids: artistIds.join(','),","        type: 'artist'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.del, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Check to see if the current user is following one or more other Spotify users.","   * @param {string[]} userIds The IDs of the users to check if are followed by the current user.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example isFollowingUsers(['thelinmichael', 'wizzler']).then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order","   *          of the returned array's elements correspond to the users IDs in the request.","   *          The boolean value of true indicates that the user is following that user, otherwise is not.","   *          Not returned if a callback is given.","   */","  isFollowingUsers: function(userIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following/contains')","      .withQueryParameters({","        ids: userIds.join(','),","        type: 'user'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Get the current user's followed artists.","   * @param {Object} [options] Options, being after and limit.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which contains","   * album objects. Not returned if a callback is given.","   */","  getFollowedArtists: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withQueryParameters({","        type : 'artist'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","    this._addQueryParameters(request, options);","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Check if users are following a playlist.","   * @param {string} userId The playlist's owner's user ID","   * @param {string} playlistId The playlist's ID","   * @param {String[]} User IDs of the following users","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful returns an array of booleans. If rejected,","   * it contains an error object. Not returned if a callback is given.","   */","  areFollowingPlaylist: function(userId, playlistId, followerIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/users/' + encodeURIComponent(userId) + '/playlists/' + playlistId + '/followers/contains')","      .withQueryParameters({","        ids : followerIds.join(',')","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Check to see if the current user is following one or more artists.","   * @param {string[]} artistIds The IDs of the artists to check if are followed by the current user.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @example isFollowingArtists(['0LcJLqbBmaGUft1e9Mm8HV', '3gqv1kgivAc92KnUm4elKv']).then(...)","   * @returns {Promise|undefined} A promise that if successful, resolves into an array of booleans. The order","   *          of the returned array's elements correspond to the artists IDs in the request.","   *          The boolean value of true indicates that the user is following that artist, otherwise is not.","   *          Not returned if a callback is given.","   */","  isFollowingArtists: function(artistIds, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/me/following/contains')","      .withQueryParameters({","        ids: artistIds.join(','),","        type: 'artist'","      })","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve new releases","   * @param {Object} [options] Options, being country, limit and/or offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which contains","   * album objects. Not returned if a callback is given.","   */","  getNewReleases: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/browse/new-releases')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve featured playlists","   * @param {Object} [options] Options, being country, locale, timestamp, limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object which contains","   * featured playlists. Not returned if a callback is given.","   */","  getFeaturedPlaylists: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/browse/featured-playlists')","      .withHeaders({ 'Content-Type' : 'application/json' })","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve a list of categories used to tag items in Spotify (e.g. in the 'Browse' tab)","   * @param {Object} [options] Options, being country, locale, limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a paging object of categories.","   * Not returned if a callback is given.","   */","  getCategories: function(options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/browse/categories')","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve a category.","   * @param {string} categoryId The id of the category to retrieve.","   * @param {Object} [options] Options, being country, locale.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing a category object.","   * Not returned if a callback is given.","   */","  getCategory: function(categoryId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/browse/categories/' + categoryId)","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Retrieve playlists for a category.","   * @param {string} categoryId The id of the category to retrieve playlists for.","   * @param {Object} [options] Options, being country, limit, offset.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to a paging object containing simple playlists.","   * Not returned if a callback is given.","   */","  getPlaylistsForCategory: function(categoryId, options, callback) {","    var request = WebApiRequest.builder()","      .withPath('/v1/browse/categories/' + categoryId + '/playlists')","      .withQueryParameters(options)","      .build();","","    this._addAccessToken(request, this.getAccessToken());","","    var promise = this._performRequest(HttpManager.get, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  }","};","","SpotifyWebApi._addMethods = function(methods) {","  for (var i in methods) {","    if (methods.hasOwnProperty(i)) {","      this.prototype[i] = methods[i];","    }","  }","};","","module.exports = SpotifyWebApi;",""],"l":{"3":1,"7":1,"8":0,"11":1,"13":0,"14":0,"15":0,"16":0,"23":0,"24":0,"26":0,"27":0,"28":0,"34":0,"35":0,"36":0,"37":0,"39":0,"43":0,"47":0,"48":0,"55":0,"56":0,"57":0,"63":0,"67":0,"71":0,"75":0,"79":0,"83":0,"87":0,"91":0,"95":0,"99":0,"103":0,"107":0,"111":0,"115":0,"119":0,"123":0,"127":0,"131":0,"132":0,"136":0,"137":0,"139":0,"144":0,"145":0,"147":0,"162":0,"163":0,"164":0,"166":0,"169":0,"170":0,"171":0,"172":0,"176":0,"181":0,"183":0,"185":0,"186":0,"187":0,"189":0,"192":0,"207":0,"208":0,"209":0,"211":0,"214":0,"215":0,"216":0,"217":0,"221":0,"228":0,"229":0,"231":0,"233":0,"234":0,"235":0,"237":0,"240":0,"255":0,"256":0,"257":0,"259":0,"262":0,"263":0,"264":0,"265":0,"269":0,"274":0,"276":0,"278":0,"279":0,"280":0,"282":0,"285":0,"300":0,"301":0,"302":0,"304":0,"307":0,"308":0,"309":0,"310":0,"314":0,"321":0,"322":0,"324":0,"326":0,"327":0,"328":0,"330":0,"333":0,"346":0,"350":0,"352":0,"354":0,"355":0,"356":0,"358":0,"361":0,"374":0,"381":0,"383":0,"385":0,"386":0,"387":0,"389":0,"392":0,"409":0,"417":0,"418":0,"420":0,"422":0,"423":0,"424":0,"426":0,"429":0,"444":0,"458":0,"472":0,"486":0,"500":0,"504":0,"505":0,"507":0,"509":0,"510":0,"511":0,"513":0,"516":0,"531":0,"535":0,"536":0,"538":0,"540":0,"541":0,"542":0,"544":0,"547":0,"562":0,"569":0,"571":0,"573":0,"574":0,"575":0,"577":0,"580":0,"593":0,"597":0,"599":0,"601":0,"602":0,"603":0,"605":0,"608":0,"622":0,"626":0,"628":0,"630":0,"631":0,"632":0,"634":0,"637":0,"651":0,"655":0,"657":0,"659":0,"660":0,"661":0,"663":0,"666":0,"682":0,"683":0,"684":0,"686":0,"689":0,"693":0,"694":0,"696":0,"698":0,"699":0,"700":0,"702":0,"705":0,"720":0,"724":0,"725":0,"727":0,"729":0,"730":0,"731":0,"733":0,"736":0,"751":0,"756":0,"758":0,"760":0,"761":0,"762":0,"764":0,"767":0,"783":0,"784":0,"785":0,"787":0,"790":0,"791":0,"792":0,"793":0,"797":0,"803":0,"805":0,"807":0,"808":0,"809":0,"811":0,"814":0,"828":0,"834":0,"836":0,"838":0,"839":0,"840":0,"842":0,"845":0,"859":0,"864":0,"866":0,"868":0,"869":0,"870":0,"872":0,"875":0,"890":0,"896":0,"898":0,"900":0,"901":0,"902":0,"904":0,"907":0,"924":0,"925":0,"926":0,"928":0,"930":0,"938":0,"939":0,"941":0,"943":0,"944":0,"945":0,"947":0,"950":0,"966":0,"974":0,"975":0,"977":0,"979":0,"980":0,"981":0,"983":0,"986":0,"1001":0,"1010":0,"1012":0,"1014":0,"1015":0,"1016":0,"1018":0,"1021":0,"1035":0,"1043":0,"1045":0,"1047":0,"1048":0,"1049":0,"1051":0,"1054":0,"1070":0,"1079":0,"1080":0,"1082":0,"1084":0,"1085":0,"1086":0,"1088":0,"1091":0,"1105":0,"1109":0,"1111":0,"1113":0,"1114":0,"1115":0,"1117":0,"1120":0,"1134":0,"1138":0,"1140":0,"1142":0,"1143":0,"1144":0,"1146":0,"1149":0,"1163":0,"1170":0,"1172":0,"1174":0,"1175":0,"1176":0,"1178":0,"1181":0,"1194":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1204":0,"1206":0,"1211":0,"1212":0,"1214":0,"1216":0,"1217":0,"1218":0,"1220":0,"1223":0,"1236":0,"1240":0,"1242":0,"1244":0,"1245":0,"1246":0,"1248":0,"1251":0,"1262":0,"1273":0,"1284":0,"1289":0,"1291":0,"1293":0,"1294":0,"1295":0,"1297":0,"1300":0,"1314":0,"1321":0,"1323":0,"1325":0,"1326":0,"1327":0,"1329":0,"1332":0,"1344":0,"1350":0,"1352":0,"1354":0,"1355":0,"1356":0,"1358":0,"1361":0,"1372":0,"1378":0,"1380":0,"1382":0,"1383":0,"1384":0,"1386":0,"1389":0,"1401":0,"1407":0,"1409":0,"1411":0,"1412":0,"1413":0,"1415":0,"1418":0,"1429":0,"1435":0,"1437":0,"1439":0,"1440":0,"1441":0,"1443":0,"1446":0,"1458":0,"1463":0,"1465":0,"1467":0,"1468":0,"1469":0,"1471":0,"1474":0,"1488":0,"1495":0,"1497":0,"1499":0,"1500":0,"1501":0,"1503":0,"1506":0,"1518":0,"1522":0,"1523":0,"1525":0,"1527":0,"1528":0,"1529":0,"1531":0,"1534":0,"1546":0,"1550":0,"1551":0,"1553":0,"1555":0,"1556":0,"1557":0,"1559":0,"1562":0,"1575":0,"1583":0,"1585":0,"1587":0,"1588":0,"1589":0,"1591":0,"1594":0,"1607":0,"1615":0,"1617":0,"1619":0,"1620":0,"1621":0,"1623":0,"1626":0,"1639":0,"1647":0,"1649":0,"1651":0,"1652":0,"1653":0,"1655":0,"1658":0,"1671":0,"1679":0,"1681":0,"1683":0,"1684":0,"1685":0,"1687":0,"1690":0,"1705":0,"1713":0,"1715":0,"1717":0,"1718":0,"1719":0,"1721":0,"1724":0,"1736":0,"1744":0,"1745":0,"1747":0,"1749":0,"1750":0,"1751":0,"1753":0,"1756":0,"1770":0,"1777":0,"1779":0,"1781":0,"1782":0,"1783":0,"1785":0,"1788":0,"1803":0,"1811":0,"1813":0,"1815":0,"1816":0,"1817":0,"1819":0,"1822":0,"1834":0,"1840":0,"1842":0,"1844":0,"1845":0,"1846":0,"1848":0,"1851":0,"1863":0,"1869":0,"1871":0,"1873":0,"1874":0,"1875":0,"1877":0,"1880":0,"1892":0,"1897":0,"1899":0,"1901":0,"1902":0,"1903":0,"1905":0,"1908":0,"1921":0,"1926":0,"1928":0,"1930":0,"1931":0,"1932":0,"1934":0,"1937":0,"1950":0,"1955":0,"1957":0,"1959":0,"1960":0,"1961":0,"1963":0,"1966":0,"1971":1,"1972":1,"1973":3,"1974":3,"1979":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/authentication-request.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/authentication-request.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":25},"end":{"line":9,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":29}},"3":{"start":{"line":9,"column":0},"end":{"line":14,"column":2}},"4":{"start":{"line":10,"column":2},"end":{"line":13,"column":34}}},"branchMap":{},"code":["'use strict';","","var Request = require('./base-request');","","var DEFAULT_HOST = 'accounts.spotify.com',","    DEFAULT_PORT = 443,","    DEFAULT_SCHEME = 'https';","","module.exports.builder = function() {","  return Request.builder()","      .withHost(DEFAULT_HOST)","      .withPort(DEFAULT_PORT)","      .withScheme(DEFAULT_SCHEME);","};"],"l":{"3":1,"5":1,"9":1,"10":0}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/base-request.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/base-request.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":1,"77":0,"78":0,"79":1,"80":0,"81":0,"82":1,"83":0,"84":0,"85":1,"86":0,"87":0,"88":1,"89":0,"90":0,"91":1,"92":0,"93":0,"94":1,"95":0,"96":1,"97":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":14},"end":{"line":3,"column":32}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":28},"end":{"line":17,"column":39}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":28},"end":{"line":21,"column":39}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":30},"end":{"line":25,"column":41}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":39}}},"6":{"name":"(anonymous_6)","line":33,"loc":{"start":{"line":33,"column":39},"end":{"line":33,"column":50}}},"7":{"name":"(anonymous_7)","line":37,"loc":{"start":{"line":37,"column":38},"end":{"line":37,"column":49}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":31},"end":{"line":41,"column":42}}},"9":{"name":"(anonymous_9)","line":45,"loc":{"start":{"line":45,"column":27},"end":{"line":45,"column":38}}},"10":{"name":"(anonymous_10)","line":60,"loc":{"start":{"line":60,"column":27},"end":{"line":60,"column":38}}},"11":{"name":"(anonymous_11)","line":69,"loc":{"start":{"line":69,"column":39},"end":{"line":69,"column":65}}},"12":{"name":"(anonymous_12)","line":75,"loc":{"start":{"line":75,"column":38},"end":{"line":75,"column":59}}},"13":{"name":"(anonymous_13)","line":82,"loc":{"start":{"line":82,"column":38},"end":{"line":82,"column":63}}},"14":{"name":"(anonymous_14)","line":88,"loc":{"start":{"line":88,"column":37},"end":{"line":88,"column":58}}},"15":{"name":"(anonymous_15)","line":95,"loc":{"start":{"line":95,"column":31},"end":{"line":95,"column":49}}},"16":{"name":"(anonymous_16)","line":105,"loc":{"start":{"line":105,"column":44},"end":{"line":105,"column":55}}},"17":{"name":"(anonymous_17)","line":125,"loc":{"start":{"line":125,"column":14},"end":{"line":125,"column":25}}},"18":{"name":"(anonymous_18)","line":129,"loc":{"start":{"line":129,"column":29},"end":{"line":129,"column":44}}},"19":{"name":"(anonymous_19)","line":134,"loc":{"start":{"line":134,"column":29},"end":{"line":134,"column":44}}},"20":{"name":"(anonymous_20)","line":139,"loc":{"start":{"line":139,"column":31},"end":{"line":139,"column":48}}},"21":{"name":"(anonymous_21)","line":144,"loc":{"start":{"line":144,"column":40},"end":{"line":144,"column":66}}},"22":{"name":"(anonymous_22)","line":149,"loc":{"start":{"line":149,"column":29},"end":{"line":149,"column":44}}},"23":{"name":"(anonymous_23)","line":154,"loc":{"start":{"line":154,"column":39},"end":{"line":154,"column":64}}},"24":{"name":"(anonymous_24)","line":159,"loc":{"start":{"line":159,"column":32},"end":{"line":159,"column":50}}},"25":{"name":"(anonymous_25)","line":164,"loc":{"start":{"line":164,"column":26},"end":{"line":164,"column":37}}},"26":{"name":"(anonymous_26)","line":168,"loc":{"start":{"line":168,"column":25},"end":{"line":168,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":2}},"2":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":58}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":27}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":27}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":49}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":47}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":27}},"11":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":19}},"13":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}},"15":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":21}},"17":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"19":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":30}},"21":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"22":{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},"23":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"24":{"start":{"line":42,"column":2},"end":{"line":42,"column":22}},"25":{"start":{"line":45,"column":0},"end":{"line":58,"column":2}},"26":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":69}},"28":{"start":{"line":49,"column":2},"end":{"line":49,"column":44}},"29":{"start":{"line":50,"column":2},"end":{"line":53,"column":3}},"30":{"start":{"line":52,"column":4},"end":{"line":52,"column":27}},"31":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"32":{"start":{"line":55,"column":4},"end":{"line":55,"column":21}},"33":{"start":{"line":57,"column":2},"end":{"line":57,"column":13}},"34":{"start":{"line":60,"column":0},"end":{"line":67,"column":2}},"35":{"start":{"line":61,"column":2},"end":{"line":61,"column":26}},"36":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"37":{"start":{"line":63,"column":4},"end":{"line":63,"column":73}},"38":{"start":{"line":65,"column":4},"end":{"line":65,"column":15}},"39":{"start":{"line":69,"column":0},"end":{"line":73,"column":2}},"40":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"41":{"start":{"line":71,"column":4},"end":{"line":71,"column":54}},"42":{"start":{"line":75,"column":0},"end":{"line":80,"column":2}},"43":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":30}},"45":{"start":{"line":79,"column":2},"end":{"line":79,"column":36}},"46":{"start":{"line":82,"column":0},"end":{"line":86,"column":2}},"47":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"48":{"start":{"line":84,"column":4},"end":{"line":84,"column":52}},"49":{"start":{"line":88,"column":0},"end":{"line":93,"column":2}},"50":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"51":{"start":{"line":90,"column":4},"end":{"line":90,"column":29}},"52":{"start":{"line":92,"column":2},"end":{"line":92,"column":35}},"53":{"start":{"line":95,"column":0},"end":{"line":103,"column":2}},"54":{"start":{"line":96,"column":2},"end":{"line":102,"column":3}},"55":{"start":{"line":97,"column":4},"end":{"line":97,"column":27}},"56":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"57":{"start":{"line":100,"column":6},"end":{"line":100,"column":39}},"58":{"start":{"line":105,"column":0},"end":{"line":123,"column":2}},"59":{"start":{"line":106,"column":2},"end":{"line":106,"column":50}},"60":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"61":{"start":{"line":108,"column":4},"end":{"line":108,"column":11}},"62":{"start":{"line":110,"column":2},"end":{"line":110,"column":33}},"63":{"start":{"line":111,"column":2},"end":{"line":111,"column":19}},"64":{"start":{"line":112,"column":2},"end":{"line":121,"column":3}},"65":{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},"66":{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},"67":{"start":{"line":115,"column":8},"end":{"line":115,"column":36}},"68":{"start":{"line":117,"column":8},"end":{"line":117,"column":22}},"69":{"start":{"line":119,"column":6},"end":{"line":119,"column":63}},"70":{"start":{"line":122,"column":2},"end":{"line":122,"column":30}},"71":{"start":{"line":125,"column":0},"end":{"line":127,"column":2}},"72":{"start":{"line":126,"column":2},"end":{"line":126,"column":77}},"73":{"start":{"line":129,"column":0},"end":{"line":132,"column":2}},"74":{"start":{"line":130,"column":2},"end":{"line":130,"column":19}},"75":{"start":{"line":131,"column":2},"end":{"line":131,"column":14}},"76":{"start":{"line":134,"column":0},"end":{"line":137,"column":2}},"77":{"start":{"line":135,"column":2},"end":{"line":135,"column":19}},"78":{"start":{"line":136,"column":2},"end":{"line":136,"column":14}},"79":{"start":{"line":139,"column":0},"end":{"line":142,"column":2}},"80":{"start":{"line":140,"column":2},"end":{"line":140,"column":23}},"81":{"start":{"line":141,"column":2},"end":{"line":141,"column":14}},"82":{"start":{"line":144,"column":0},"end":{"line":147,"column":2}},"83":{"start":{"line":145,"column":2},"end":{"line":145,"column":41}},"84":{"start":{"line":146,"column":2},"end":{"line":146,"column":14}},"85":{"start":{"line":149,"column":0},"end":{"line":152,"column":2}},"86":{"start":{"line":150,"column":2},"end":{"line":150,"column":19}},"87":{"start":{"line":151,"column":2},"end":{"line":151,"column":14}},"88":{"start":{"line":154,"column":0},"end":{"line":157,"column":2}},"89":{"start":{"line":155,"column":2},"end":{"line":155,"column":39}},"90":{"start":{"line":156,"column":2},"end":{"line":156,"column":14}},"91":{"start":{"line":159,"column":0},"end":{"line":162,"column":2}},"92":{"start":{"line":160,"column":2},"end":{"line":160,"column":25}},"93":{"start":{"line":161,"column":2},"end":{"line":161,"column":14}},"94":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"95":{"start":{"line":165,"column":2},"end":{"line":165,"column":27}},"96":{"start":{"line":168,"column":0},"end":{"line":170,"column":2}},"97":{"start":{"line":169,"column":2},"end":{"line":169,"column":23}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":18}},{"start":{"line":46,"column":22},"end":{"line":46,"column":32}},{"start":{"line":46,"column":36},"end":{"line":46,"column":46}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":28}},{"start":{"line":50,"column":32},"end":{"line":50,"column":48}},{"start":{"line":51,"column":4},"end":{"line":51,"column":27}},{"start":{"line":51,"column":31},"end":{"line":51,"column":48}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"11":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"12":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"13":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]}},"code":["'use strict';","","var Request = function(builder) {","  if (!builder) {","    throw new Error('No builder supplied to constructor');","  }","","  this.host = builder.host;","  this.port = builder.port;","  this.scheme = builder.scheme;","  this.queryParameters = builder.queryParameters;","  this.bodyParameters = builder.bodyParameters;","  this.headers = builder.headers;","  this.path = builder.path;","};","","Request.prototype.getHost = function() {","  return this.host;","};","","Request.prototype.getPort = function() {","  return this.port;","};","","Request.prototype.getScheme = function() {","  return this.scheme;","};","","Request.prototype.getPath = function() {","  return this.path;","};","","Request.prototype.getQueryParameters = function() {","  return this.queryParameters;","};","","Request.prototype.getBodyParameters = function() {","  return this.bodyParameters;","};","","Request.prototype.getHeaders = function() {","  return this.headers;","};","","Request.prototype.getURI = function() {","  if (!this.scheme || !this.host || !this.port) {","    throw new Error('Missing components necessary to construct URI');","  }","  var uri = this.scheme + '://' + this.host;","  if (this.scheme === 'http' && this.port !== 80 ||","    this.scheme === 'https' && this.port !== 443) {","    uri += ':' + this.port;","  }","  if (this.path) {","    uri += this.path;","  }","  return uri;","};","","Request.prototype.getURL = function() {","  var uri = this.getURI();","  if (this.getQueryParameters()) {","    return uri + this.getQueryParameterString(this.getQueryParameters());","  } else {","    return uri;","  }","};","","Request.prototype.addQueryParameters = function(queryParameters) {","  for (var key in queryParameters) {","    this.addQueryParameter(key, queryParameters[key]);","  }","};","","Request.prototype.addQueryParameter = function(key, value) {","  if (!this.queryParameters) {","    this.queryParameters = {};","  }","  this.queryParameters[key] = value;","};","","Request.prototype.addBodyParameters = function(bodyParameters) {","  for (var key in bodyParameters) {","    this.addBodyParameter(key, bodyParameters[key]);","  }","};","","Request.prototype.addBodyParameter = function(key, value) {","  if (!this.bodyParameters) {","    this.bodyParameters = {};","  }","  this.bodyParameters[key] = value;","};","","Request.prototype.addHeaders = function(headers) {","  if (!this.headers) {","    this.headers = headers;","  } else {","    for (var key in headers) {","      this.headers[key] = headers[key];","    }","  }","};","","Request.prototype.getQueryParameterString = function() {","  var queryParameters = this.getQueryParameters();","  if (!queryParameters) {","    return;","  }","  var queryParameterString = '?';","  var first = true;","  for (var key in queryParameters) {","    if (queryParameters.hasOwnProperty(key)) {","      if (!first) {","        queryParameterString += '&';","      } else {","        first = false;","      }","      queryParameterString += key + '=' + queryParameters[key];","    }","  }","  return queryParameterString;","};","","var Builder = function() {","  var host, port, scheme, queryParameters, bodyParameters, headers, jsonBody;","};","","Builder.prototype.withHost = function(host) {","  this.host = host;","  return this;","};","","Builder.prototype.withPort = function(port) {","  this.port = port;","  return this;","};","","Builder.prototype.withScheme = function(scheme) {","  this.scheme = scheme;","  return this;","};","","Builder.prototype.withQueryParameters = function(queryParameters) {","  this.queryParameters = queryParameters;","  return this;","};","","Builder.prototype.withPath = function(path) {","  this.path = path;","  return this;","};","","Builder.prototype.withBodyParameters = function(bodyParameters) {","  this.bodyParameters = bodyParameters;","  return this;","};","","Builder.prototype.withHeaders = function(headers) {","  this.headers = headers;","  return this;","};","","Builder.prototype.build = function() {","  return new Request(this);","};","","module.exports.builder = function() {","  return new Builder();","};",""],"l":{"3":1,"4":0,"5":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"17":1,"18":0,"21":1,"22":0,"25":1,"26":0,"29":1,"30":0,"33":1,"34":0,"37":1,"38":0,"41":1,"42":0,"45":1,"46":0,"47":0,"49":0,"50":0,"52":0,"54":0,"55":0,"57":0,"60":1,"61":0,"62":0,"63":0,"65":0,"69":1,"70":0,"71":0,"75":1,"76":0,"77":0,"79":0,"82":1,"83":0,"84":0,"88":1,"89":0,"90":0,"92":0,"95":1,"96":0,"97":0,"99":0,"100":0,"105":1,"106":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"117":0,"119":0,"122":0,"125":1,"126":0,"129":1,"130":0,"131":0,"134":1,"135":0,"136":0,"139":1,"140":0,"141":0,"144":1,"145":0,"146":0,"149":1,"150":0,"151":0,"154":1,"155":0,"156":0,"159":1,"160":0,"161":0,"164":1,"165":0,"168":1,"169":0}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/webapi-request.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/webapi-request.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":25},"end":{"line":9,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":29}},"3":{"start":{"line":9,"column":0},"end":{"line":14,"column":2}},"4":{"start":{"line":10,"column":2},"end":{"line":13,"column":34}}},"branchMap":{},"code":["'use strict';","","var Request = require('./base-request');","","var DEFAULT_HOST = 'api.spotify.com',","    DEFAULT_PORT = 443,","    DEFAULT_SCHEME = 'https';","","module.exports.builder = function() {","  return Request.builder()","      .withHost(DEFAULT_HOST)","      .withPort(DEFAULT_PORT)","      .withScheme(DEFAULT_SCHEME);","};"],"l":{"3":1,"5":1,"9":1,"10":0}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/http-manager.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/http-manager.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":32},"end":{"line":9,"column":50}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":52}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":27},"end":{"line":60,"column":68}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":10},"end":{"line":78,"column":35}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":18},"end":{"line":99,"column":46}}},"6":{"name":"(anonymous_6)","line":111,"loc":{"start":{"line":111,"column":19},"end":{"line":111,"column":47}}},"7":{"name":"(anonymous_7)","line":124,"loc":{"start":{"line":124,"column":18},"end":{"line":124,"column":46}}},"8":{"name":"(anonymous_8)","line":137,"loc":{"start":{"line":137,"column":18},"end":{"line":137,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"3":{"start":{"line":9,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":19}},"5":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":49}},"7":{"start":{"line":17,"column":2},"end":{"line":22,"column":3}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":63}},"9":{"start":{"line":20,"column":9},"end":{"line":22,"column":3}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":47}},"11":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":43}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":17}},"14":{"start":{"line":31,"column":0},"end":{"line":57,"column":2}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"16":{"start":{"line":33,"column":2},"end":{"line":49,"column":3}},"17":{"start":{"line":35,"column":4},"end":{"line":35,"column":71}},"18":{"start":{"line":36,"column":9},"end":{"line":49,"column":3}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":79}},"20":{"start":{"line":41,"column":9},"end":{"line":49,"column":3}},"21":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"22":{"start":{"line":44,"column":6},"end":{"line":44,"column":40}},"23":{"start":{"line":45,"column":6},"end":{"line":45,"column":89}},"24":{"start":{"line":51,"column":2},"end":{"line":54,"column":3}},"25":{"start":{"line":53,"column":4},"end":{"line":53,"column":79}},"26":{"start":{"line":56,"column":2},"end":{"line":56,"column":21}},"27":{"start":{"line":60,"column":0},"end":{"line":92,"column":2}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":24}},"29":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"30":{"start":{"line":64,"column":4},"end":{"line":64,"column":29}},"31":{"start":{"line":67,"column":2},"end":{"line":72,"column":3}},"32":{"start":{"line":68,"column":4},"end":{"line":68,"column":21}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":27}},"34":{"start":{"line":70,"column":9},"end":{"line":72,"column":3}},"35":{"start":{"line":71,"column":4},"end":{"line":71,"column":27}},"36":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"37":{"start":{"line":75,"column":4},"end":{"line":75,"column":29}},"38":{"start":{"line":78,"column":2},"end":{"line":91,"column":5}},"39":{"start":{"line":79,"column":4},"end":{"line":84,"column":5}},"40":{"start":{"line":80,"column":6},"end":{"line":82,"column":9}},"41":{"start":{"line":83,"column":6},"end":{"line":83,"column":35}},"42":{"start":{"line":86,"column":4},"end":{"line":90,"column":7}},"43":{"start":{"line":99,"column":0},"end":{"line":104,"column":2}},"44":{"start":{"line":100,"column":2},"end":{"line":100,"column":51}},"45":{"start":{"line":101,"column":2},"end":{"line":101,"column":30}},"46":{"start":{"line":103,"column":2},"end":{"line":103,"column":72}},"47":{"start":{"line":111,"column":0},"end":{"line":117,"column":2}},"48":{"start":{"line":113,"column":2},"end":{"line":113,"column":51}},"49":{"start":{"line":114,"column":2},"end":{"line":114,"column":31}},"50":{"start":{"line":116,"column":2},"end":{"line":116,"column":72}},"51":{"start":{"line":124,"column":0},"end":{"line":130,"column":2}},"52":{"start":{"line":126,"column":2},"end":{"line":126,"column":51}},"53":{"start":{"line":127,"column":2},"end":{"line":127,"column":30}},"54":{"start":{"line":129,"column":2},"end":{"line":129,"column":72}},"55":{"start":{"line":137,"column":0},"end":{"line":143,"column":2}},"56":{"start":{"line":139,"column":2},"end":{"line":139,"column":51}},"57":{"start":{"line":140,"column":2},"end":{"line":140,"column":30}},"58":{"start":{"line":142,"column":2},"end":{"line":142,"column":72}},"59":{"start":{"line":145,"column":0},"end":{"line":145,"column":29}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":26}},{"start":{"line":18,"column":6},"end":{"line":18,"column":65}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":9}},{"start":{"line":20,"column":9},"end":{"line":20,"column":9}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"7":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":35}},{"start":{"line":33,"column":39},"end":{"line":33,"column":76}}]},"8":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":9},"end":{"line":36,"column":9}},{"start":{"line":36,"column":9},"end":{"line":36,"column":9}}]},"9":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":9},"end":{"line":41,"column":9}},{"start":{"line":41,"column":9},"end":{"line":41,"column":9}}]},"10":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"11":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"13":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":18}},{"start":{"line":67,"column":23},"end":{"line":67,"column":39}},{"start":{"line":67,"column":43},"end":{"line":67,"column":97}}]},"14":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":9},"end":{"line":70,"column":9}},{"start":{"line":70,"column":9},"end":{"line":70,"column":9}}]},"15":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"16":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]}},"code":["'use strict';","","var superagent = require('superagent'),","    WebApiError = require('./webapi-error');","","var HttpManager = {};","","/* Create superagent options from the base request */","var _getParametersFromRequest = function(request) {","","  var options = {};","","  if (request.getQueryParameters()) {","    options.query = request.getQueryParameters();","  }","","  if (request.getHeaders() &&","      request.getHeaders()['Content-Type'] === 'application/json') {","    options.data = JSON.stringify(request.getBodyParameters());","  } else if (request.getBodyParameters()) {","    options.data = request.getBodyParameters();","  }","","  if (request.getHeaders()) {","    options.headers = request.getHeaders();","  }","  return options;","};","","/* Create an error object from an error returned from the Web API */","var _getErrorObject = function(defaultMessage, err) {","  var errorObject;","  if (typeof err.error === 'object' && typeof err.error.message === 'string') {","    // Web API Error format","    errorObject = new WebApiError(err.error.message, err.error.status);","  } else if (typeof err.error === 'string') {","    // Authorization Error format","    /* jshint ignore:start */","    errorObject = new WebApiError(err.error + ': ' + err['error_description']);","    /* jshint ignore:end */","  } else if (typeof err === 'string') {","    // Serialized JSON error","    try {","      var parsedError = JSON.parse(err);","      errorObject = new WebApiError(parsedError.error.message, parsedError.error.status);","    } catch (err) {","      // Error not JSON formatted","    }","  }","","  if(!errorObject) {","    // Unexpected format","    errorObject = new WebApiError(defaultMessage + ': ' + JSON.stringify(err));","  }","","  return errorObject;","};","","/* Make the request to the Web API */","HttpManager._makeRequest = function(method, options, uri, callback) {","  var req = method(uri);","","  if (options.query) {","    req.query(options.query);","  }","","  if (options.data && (!options.headers || options.headers['Content-Type'] !== 'application/json')) {","    req.type('form');","    req.send(options.data);","  } else if (options.data) {","    req.send(options.data);","  }","","  if (options.headers) {","    req.set(options.headers);","  }","","  req.end(function (err, response) {","    if (err) {","      var errorObject = _getErrorObject('Request error', {","        error: err","      });","      return callback(errorObject);","    }","","    return callback(null, {","      body: response.body,","      headers: response.headers,","      statusCode: response.statusCode","    });","  });","};","","/**"," * Make a HTTP GET request."," * @param {BaseRequest} The request."," * @param {Function} The callback function."," */","HttpManager.get = function(request, callback) {","  var options = _getParametersFromRequest(request);","  var method = superagent.get;","","  HttpManager._makeRequest(method, options, request.getURI(), callback);","};","","/**"," * Make a HTTP POST request."," * @param {BaseRequest} The request."," * @param {Function} The callback function."," */","HttpManager.post = function(request, callback) {","","  var options = _getParametersFromRequest(request);","  var method = superagent.post;","","  HttpManager._makeRequest(method, options, request.getURI(), callback);","};","","/**"," * Make a HTTP DELETE request."," * @param {BaseRequest} The request."," * @param {Function} The callback function."," */","HttpManager.del = function(request, callback) {","","  var options = _getParametersFromRequest(request);","  var method = superagent.del;","","  HttpManager._makeRequest(method, options, request.getURI(), callback);","};","","/**"," * Make a HTTP PUT request."," * @param {BaseRequest} The request."," * @param {Function} The callback function."," */","HttpManager.put = function(request, callback) {","","  var options = _getParametersFromRequest(request);","  var method = superagent.put;","","  HttpManager._makeRequest(method, options, request.getURI(), callback);","};","","module.exports = HttpManager;",""],"l":{"3":1,"6":1,"9":1,"11":0,"13":0,"14":0,"17":0,"19":0,"20":0,"21":0,"24":0,"25":0,"27":0,"31":1,"32":0,"33":0,"35":0,"36":0,"39":0,"41":0,"43":0,"44":0,"45":0,"51":0,"53":0,"56":0,"60":1,"61":0,"63":0,"64":0,"67":0,"68":0,"69":0,"70":0,"71":0,"74":0,"75":0,"78":0,"79":0,"80":0,"83":0,"86":0,"99":1,"100":0,"101":0,"103":0,"111":1,"113":0,"114":0,"116":0,"124":1,"126":0,"127":0,"129":0,"137":1,"139":0,"140":0,"142":0,"145":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/webapi-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/webapi-error.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"WebapiError","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":1}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":18},"end":{"line":5,"column":25}},{"start":{"line":5,"column":29},"end":{"line":5,"column":31}}]}},"code":["'use strict';","","function WebapiError(message, statusCode) {","  this.name = 'WebapiError';","  this.message = (message || '');","  this.statusCode = statusCode;","}","","WebapiError.prototype = Error.prototype;","","module.exports = WebapiError;"],"l":{"3":1,"4":0,"5":0,"6":0,"9":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/server-methods.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/server-methods.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":26},"end":{"line":15,"column":54}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":34}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":23}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":26},"end":{"line":50,"column":51}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":19},"end":{"line":65,"column":34}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":23}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":22},"end":{"line":83,"column":41}}},"8":{"name":"(anonymous_8)","line":98,"loc":{"start":{"line":98,"column":19},"end":{"line":98,"column":34}}},"9":{"name":"(anonymous_9)","line":100,"loc":{"start":{"line":100,"column":9},"end":{"line":100,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":6,"column":0},"end":{"line":107,"column":2}},"4":{"start":{"line":16,"column":4},"end":{"line":24,"column":15}},"5":{"start":{"line":26,"column":4},"end":{"line":26,"column":46}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":67}},"7":{"start":{"line":30,"column":4},"end":{"line":38,"column":5}},"8":{"start":{"line":31,"column":6},"end":{"line":35,"column":9}},"9":{"start":{"line":32,"column":8},"end":{"line":32,"column":29}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"11":{"start":{"line":37,"column":6},"end":{"line":37,"column":21}},"12":{"start":{"line":51,"column":4},"end":{"line":60,"column":15}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":66}},"14":{"start":{"line":64,"column":4},"end":{"line":72,"column":5}},"15":{"start":{"line":65,"column":6},"end":{"line":69,"column":9}},"16":{"start":{"line":66,"column":8},"end":{"line":66,"column":29}},"17":{"start":{"line":68,"column":8},"end":{"line":68,"column":22}},"18":{"start":{"line":71,"column":6},"end":{"line":71,"column":21}},"19":{"start":{"line":84,"column":4},"end":{"line":93,"column":15}},"20":{"start":{"line":95,"column":4},"end":{"line":95,"column":66}},"21":{"start":{"line":97,"column":4},"end":{"line":105,"column":5}},"22":{"start":{"line":98,"column":6},"end":{"line":102,"column":9}},"23":{"start":{"line":99,"column":8},"end":{"line":99,"column":29}},"24":{"start":{"line":101,"column":8},"end":{"line":101,"column":22}},"25":{"start":{"line":104,"column":6},"end":{"line":104,"column":21}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]}},"code":["'use strict';","","var AuthenticationRequest = require('./authentication-request');","var HttpManager = require('./http-manager');","","module.exports = {","  /**","   * Request an access token using the Client Credentials flow.","   * Requires that client ID and client secret has been set previous to the call.","   * @param {Object} options Options.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves into an object containing the access token,","   *          token type and time to expiration. If rejected, it contains an error object. Not returned if a callback is given.","   */","  clientCredentialsGrant: function(options, callback) {","    var request = AuthenticationRequest.builder()","      .withPath('/api/token')","      .withBodyParameters({","        'grant_type' : 'client_credentials'","      })","      .withHeaders({","        Authorization : ('Basic ' + new Buffer(this.getClientId() + ':' + this.getClientSecret()).toString('base64'))","      })","      .build();","","    this._addBodyParameters(request, options);","","    var promise =  this._performRequest(HttpManager.post, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Request an access token using the Authorization Code flow.","   * Requires that client ID, client secret, and redirect URI has been set previous to the call.","   * @param {string} code The authorization code returned in the callback in the Authorization Code flow.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves into an object containing the access token,","   *          refresh token, token type and time to expiration. If rejected, it contains an error object.","   *          Not returned if a callback is given.","   */","  authorizationCodeGrant: function(code, callback) {","    var request = AuthenticationRequest.builder()","      .withPath('/api/token')","      .withBodyParameters({","        'grant_type' : 'authorization_code',","        'redirect_uri' : this.getRedirectURI(),","        'code' : code,","        'client_id' : this.getClientId(),","        'client_secret' : this.getClientSecret()","      })","      .build();","","    var promise = this._performRequest(HttpManager.post, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  },","","  /**","   * Refresh the access token given that it hasn't expired.","   * Requires that client ID, client secret and refresh token has been set previous to the call.","   * @param {requestCallback} [callback] Optional callback method to be called instead of the promise.","   * @returns {Promise|undefined} A promise that if successful, resolves to an object containing the","   *          access token, time to expiration and token type. If rejected, it contains an error object.","   *          Not returned if a callback is given.","   */","  refreshAccessToken: function(callback) {","    var request = AuthenticationRequest.builder()","      .withPath('/api/token')","      .withBodyParameters({","        'grant_type' : 'refresh_token',","        'refresh_token' : this.getRefreshToken()","      })","      .withHeaders({","        Authorization : ('Basic ' + new Buffer(this.getClientId() + ':' + this.getClientSecret()).toString('base64'))","      })","      .build();","","    var promise = this._performRequest(HttpManager.post, request);","","    if (callback) {","      promise.then(function(data) {","        callback(null, data);","      }, function(err) {","        callback(err);","      });","    } else {","      return promise;","    }","  }","};",""],"l":{"3":1,"4":1,"6":1,"16":0,"26":0,"28":0,"30":0,"31":0,"32":0,"34":0,"37":0,"51":0,"62":0,"64":0,"65":0,"66":0,"68":0,"71":0,"84":0,"95":0,"97":0,"98":0,"99":0,"101":0,"104":0}},"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-spotify-web-api-node/node_modules/spotify-web-api-node/src/client.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}}},"branchMap":{},"code":["module.exports = require('./spotify-web-api');",""],"l":{"1":1}}}